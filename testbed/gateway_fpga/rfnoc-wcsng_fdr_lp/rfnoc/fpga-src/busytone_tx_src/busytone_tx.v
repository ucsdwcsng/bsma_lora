// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="busytone_tx,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k325tffg900-3,HLS_INPUT_CLOCK=4.650000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.215375,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=64,HLS_SYN_DSP=0,HLS_SYN_FF=266,HLS_SYN_LUT=684,HLS_VERSION=2018_3}" *)

module busytone_tx (
        ap_clk,
        ap_rst_n,
        data_in_TDATA,
        data_in_TVALID,
        data_in_TREADY,
        data_in_TLAST,
        data_out_TDATA,
        data_out_TVALID,
        data_out_TREADY,
        data_out_TLAST,
        param1_V,
        param2_V,
        param_out_V
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter2_fsm_state3 = 2'd2;
parameter    ap_ST_iter3_fsm_state4 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    ap_ST_iter2_fsm_state0 = 2'd1;
parameter    ap_ST_iter3_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst_n;
input  [31:0] data_in_TDATA;
input   data_in_TVALID;
output   data_in_TREADY;
input  [0:0] data_in_TLAST;
output  [31:0] data_out_TDATA;
output   data_out_TVALID;
input   data_out_TREADY;
output  [0:0] data_out_TLAST;
input  [31:0] param1_V;
input  [31:0] param2_V;
output  [31:0] param_out_V;

reg data_in_TREADY;

 reg    ap_rst_n_inv;
reg   [31:0] data_out_V_data_1_data_in;
reg   [31:0] data_out_V_data_1_data_out;
reg    data_out_V_data_1_vld_in;
wire    data_out_V_data_1_vld_out;
wire    data_out_V_data_1_ack_in;
wire    data_out_V_data_1_ack_out;
reg   [31:0] data_out_V_data_1_payload_A;
reg   [31:0] data_out_V_data_1_payload_B;
reg    data_out_V_data_1_sel_rd;
reg    data_out_V_data_1_sel_wr;
wire    data_out_V_data_1_sel;
wire    data_out_V_data_1_load_A;
wire    data_out_V_data_1_load_B;
reg   [1:0] data_out_V_data_1_state;
wire    data_out_V_data_1_state_cmp_full;
reg   [0:0] data_out_V_last_V_1_data_out;
reg    data_out_V_last_V_1_vld_in;
wire    data_out_V_last_V_1_vld_out;
wire    data_out_V_last_V_1_ack_in;
wire    data_out_V_last_V_1_ack_out;
reg   [0:0] data_out_V_last_V_1_payload_A;
reg   [0:0] data_out_V_last_V_1_payload_B;
reg    data_out_V_last_V_1_sel_rd;
reg    data_out_V_last_V_1_sel_wr;
wire    data_out_V_last_V_1_sel;
wire    data_out_V_last_V_1_load_A;
wire    data_out_V_last_V_1_load_B;
reg   [1:0] data_out_V_last_V_1_state;
wire    data_out_V_last_V_1_state_cmp_full;
reg   [2:0] state_var_V;
reg   [3:0] trig_type_V;
reg   [17:0] busytone_num_idx_V;
reg   [17:0] trail_zero_idx_V;
reg   [3:0] amp_divider_V;
reg   [9:0] tlast_counter_V;
reg   [13:0] preamble_buf_idx_V;
wire   [13:0] wlan_preamble_vec_M_1_address0;
reg    wlan_preamble_vec_M_1_ce0;
wire   [15:0] wlan_preamble_vec_M_1_q0;
wire   [13:0] wlan_preamble_vec_M_address0;
reg    wlan_preamble_vec_M_ce0;
wire   [15:0] wlan_preamble_vec_M_q0;
wire   [13:0] preamble_vec_M_imag_address0;
reg    preamble_vec_M_imag_ce0;
wire   [15:0] preamble_vec_M_imag_q0;
wire   [13:0] preamble_vec_M_real_address0;
reg    preamble_vec_M_real_ce0;
wire   [15:0] preamble_vec_M_real_q0;
reg   [7:0] preamble_num_idx_V;
reg   [17:0] loop_zero_idx_V;
reg    data_in_TDATA_blk_n;
reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state2;
reg   [1:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state3;
reg   [1:0] ap_CS_iter3_fsm;
wire    ap_CS_iter3_fsm_state4;
wire   [2:0] state_var_V_load_load_fu_315_p1;
wire   [0:0] tmp_nbreadreq_fu_150_p4;
reg    data_out_TDATA_blk_n;
reg   [2:0] state_var_V_load_reg_650;
reg   [2:0] state_var_V_load_reg_650_pp0_iter1_reg;
reg   [0:0] tmp_reg_700;
reg   [0:0] tmp_reg_700_pp0_iter1_reg;
reg   [2:0] state_var_V_load_reg_650_pp0_iter2_reg;
reg   [0:0] tmp_reg_700_pp0_iter2_reg;
reg   [0:0] tmp_8_reg_659;
reg   [0:0] tmp_8_reg_659_pp0_iter1_reg;
reg   [0:0] tmp_8_reg_659_pp0_iter2_reg;
reg   [0:0] tmp_5_reg_655;
reg   [0:0] tmp_5_reg_655_pp0_iter1_reg;
reg   [0:0] tmp_5_reg_655_pp0_iter2_reg;
reg    ap_predicate_op72_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_predicate_op92_write_state3;
reg    ap_predicate_op98_write_state3;
reg    ap_predicate_op117_write_state3;
reg    ap_block_state3_io;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_predicate_op136_write_state4;
reg    ap_predicate_op138_write_state4;
reg    ap_predicate_op146_write_state4;
reg    ap_block_state4_io;
wire   [2:0] state_var_V_load_reg_650_pp0_iter0_reg;
wire   [0:0] tmp_5_fu_349_p2;
wire   [0:0] tmp_8_fu_400_p2;
wire   [0:0] tmp_3_fu_456_p2;
reg   [0:0] tmp_3_reg_666;
reg   [0:0] tmp_3_reg_666_pp0_iter1_reg;
wire   [0:0] tmp_s_fu_474_p2;
wire   [0:0] tmp_6_fu_520_p2;
wire   [0:0] tmp_reg_700_pp0_iter0_reg;
reg   [3:0] p_Result_6_reg_704;
reg   [15:0] wlan_preamble_vec_M_3_reg_709;
reg   [15:0] wlan_preamble_vec_M_5_reg_714;
reg   [15:0] preamble_vec_M_imag_2_reg_719;
reg   [15:0] preamble_vec_M_real_2_reg_724;
wire   [0:0] grp_fu_288_p2;
wire   [31:0] tmp_data_1_fu_637_p3;
reg   [17:0] ap_phi_mux_storemerge1_phi_fu_241_p4;
wire   [17:0] tmp_11_fu_355_p2;
wire   [17:0] ap_phi_reg_pp0_iter0_storemerge1_reg_238;
reg   [2:0] ap_phi_mux_storemerge_phi_fu_251_p4;
wire   [2:0] ap_phi_reg_pp0_iter0_storemerge_reg_248;
reg   [2:0] ap_phi_mux_storemerge3_phi_fu_262_p6;
wire   [2:0] ap_phi_reg_pp0_iter0_storemerge3_reg_259;
wire   [0:0] tmp_10_fu_420_p2;
reg   [1:0] ap_phi_mux_storemerge2_phi_fu_276_p4;
wire   [1:0] ap_phi_reg_pp0_iter0_storemerge2_reg_273;
wire   [63:0] tmp_1_fu_466_p1;
wire   [2:0] storemerge2_cast_fu_586_p1;
wire   [3:0] tmp_14_fu_566_p1;
wire   [17:0] tmp_13_fu_532_p2;
wire   [9:0] grp_fu_301_p3;
wire   [13:0] tmp_7_fu_480_p2;
wire   [7:0] tmp_12_fu_544_p2;
wire   [17:0] tmp_9_fu_438_p2;
wire   [9:0] grp_fu_295_p2;
wire   [7:0] tmp_2_fu_331_p4;
wire   [17:0] r_V_1_fu_341_p3;
wire   [15:0] tmp_4_fu_374_p4;
wire   [19:0] tmp_6_cast_fu_396_p1;
wire   [19:0] r_V_fu_384_p3;
wire   [11:0] tmp_16_fu_412_p1;
wire   [17:0] p_Result_cast_fu_416_p1;
wire   [7:0] tmp_15_fu_498_p1;
wire   [8:0] lhs_V_cast_fu_502_p1;
wire   [8:0] tmp_16_cast_fu_516_p1;
wire   [8:0] ret_V_fu_506_p2;
wire   [15:0] tmp_18_pn_in_fu_620_p3;
wire   [15:0] sh_cast_fu_611_p1;
wire   [15:0] tmp_20_pn_in_fu_615_p3;
wire   [15:0] r_V_5_fu_631_p2;
wire   [15:0] r_V_4_fu_625_p2;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg   [1:0] ap_NS_iter2_fsm;
reg   [1:0] ap_NS_iter3_fsm;
reg    ap_condition_462;
reg    ap_condition_492;
reg    ap_condition_339;
reg    ap_condition_355;
reg    ap_condition_361;
reg    ap_condition_391;
reg    ap_condition_484;

// power-on initialization
initial begin
#0 data_out_V_data_1_sel_rd = 1'b0;
#0 data_out_V_data_1_sel_wr = 1'b0;
#0 data_out_V_data_1_state = 2'd0;
#0 data_out_V_last_V_1_sel_rd = 1'b0;
#0 data_out_V_last_V_1_sel_wr = 1'b0;
#0 data_out_V_last_V_1_state = 2'd0;
#0 state_var_V = 3'd0;
#0 trig_type_V = 4'd0;
#0 busytone_num_idx_V = 18'd0;
#0 trail_zero_idx_V = 18'd0;
#0 amp_divider_V = 4'd0;
#0 tlast_counter_V = 10'd0;
#0 preamble_buf_idx_V = 14'd0;
#0 preamble_num_idx_V = 8'd0;
#0 loop_zero_idx_V = 18'd0;
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_CS_iter2_fsm = 2'd1;
#0 ap_CS_iter3_fsm = 2'd1;
end

busytone_tx_wlan_preamble_vec_M_1 #(
    .DataWidth( 16 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
wlan_preamble_vec_M_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(wlan_preamble_vec_M_1_address0),
    .ce0(wlan_preamble_vec_M_1_ce0),
    .q0(wlan_preamble_vec_M_1_q0)
);

busytone_tx_wlan_preamble_vec_M #(
    .DataWidth( 16 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
wlan_preamble_vec_M_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(wlan_preamble_vec_M_address0),
    .ce0(wlan_preamble_vec_M_ce0),
    .q0(wlan_preamble_vec_M_q0)
);

busytone_tx_preamble_vec_M_imag #(
    .DataWidth( 16 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
preamble_vec_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(preamble_vec_M_imag_address0),
    .ce0(preamble_vec_M_imag_ce0),
    .q0(preamble_vec_M_imag_q0)
);

busytone_tx_preamble_vec_M_real #(
    .DataWidth( 16 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
preamble_vec_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(preamble_vec_M_real_address0),
    .ce0(preamble_vec_M_real_ce0),
    .q0(preamble_vec_M_real_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter3_fsm <= ap_ST_iter3_fsm_state0;
    end else begin
        ap_CS_iter3_fsm <= ap_NS_iter3_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_data_1_sel_rd <= 1'b0;
    end else begin
        if (((data_out_V_data_1_ack_out == 1'b1) & (data_out_V_data_1_vld_out == 1'b1))) begin
            data_out_V_data_1_sel_rd <= ~data_out_V_data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_data_1_sel_wr <= 1'b0;
    end else begin
        if (((data_out_V_data_1_ack_in == 1'b1) & (data_out_V_data_1_vld_in == 1'b1))) begin
            data_out_V_data_1_sel_wr <= ~data_out_V_data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_data_1_state <= 2'd0;
    end else begin
        if ((((data_out_V_data_1_vld_in == 1'b0) & (data_out_V_data_1_state == 2'd2)) | ((data_out_V_data_1_vld_in == 1'b0) & (data_out_V_data_1_ack_out == 1'b1) & (data_out_V_data_1_state == 2'd3)))) begin
            data_out_V_data_1_state <= 2'd2;
        end else if ((((data_out_V_data_1_ack_out == 1'b0) & (data_out_V_data_1_state == 2'd1)) | ((data_out_V_data_1_ack_out == 1'b0) & (data_out_V_data_1_vld_in == 1'b1) & (data_out_V_data_1_state == 2'd3)))) begin
            data_out_V_data_1_state <= 2'd1;
        end else if (((~((data_out_V_data_1_vld_in == 1'b0) & (data_out_V_data_1_ack_out == 1'b1)) & ~((data_out_V_data_1_ack_out == 1'b0) & (data_out_V_data_1_vld_in == 1'b1)) & (data_out_V_data_1_state == 2'd3)) | ((data_out_V_data_1_ack_out == 1'b1) & (data_out_V_data_1_state == 2'd1)) | ((data_out_V_data_1_vld_in == 1'b1) & (data_out_V_data_1_state == 2'd2)))) begin
            data_out_V_data_1_state <= 2'd3;
        end else begin
            data_out_V_data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((data_out_V_last_V_1_ack_out == 1'b1) & (data_out_V_last_V_1_vld_out == 1'b1))) begin
            data_out_V_last_V_1_sel_rd <= ~data_out_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((data_out_V_last_V_1_ack_in == 1'b1) & (data_out_V_last_V_1_vld_in == 1'b1))) begin
            data_out_V_last_V_1_sel_wr <= ~data_out_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((data_out_V_last_V_1_vld_in == 1'b0) & (data_out_V_last_V_1_state == 2'd2)) | ((data_out_V_last_V_1_vld_in == 1'b0) & (data_out_V_last_V_1_ack_out == 1'b1) & (data_out_V_last_V_1_state == 2'd3)))) begin
            data_out_V_last_V_1_state <= 2'd2;
        end else if ((((data_out_V_last_V_1_ack_out == 1'b0) & (data_out_V_last_V_1_state == 2'd1)) | ((data_out_V_last_V_1_ack_out == 1'b0) & (data_out_V_last_V_1_vld_in == 1'b1) & (data_out_V_last_V_1_state == 2'd3)))) begin
            data_out_V_last_V_1_state <= 2'd1;
        end else if (((~((data_out_V_last_V_1_vld_in == 1'b0) & (data_out_V_last_V_1_ack_out == 1'b1)) & ~((data_out_V_last_V_1_ack_out == 1'b0) & (data_out_V_last_V_1_vld_in == 1'b1)) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_V_last_V_1_state == 2'd1) & (data_out_V_last_V_1_ack_out == 1'b1)) | ((data_out_V_last_V_1_vld_in == 1'b1) & (data_out_V_last_V_1_state == 2'd2)))) begin
            data_out_V_last_V_1_state <= 2'd3;
        end else begin
            data_out_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_339)) begin
        if ((1'b1 == ap_condition_492)) begin
            busytone_num_idx_V <= tmp_13_fu_532_p2;
        end else if ((1'b1 == ap_condition_462)) begin
            busytone_num_idx_V <= 18'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_355)) begin
        if ((tmp_8_fu_400_p2 == 1'd1)) begin
            loop_zero_idx_V <= tmp_9_fu_438_p2;
        end else if ((tmp_8_fu_400_p2 == 1'd0)) begin
            loop_zero_idx_V <= 18'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_361)) begin
        if ((tmp_s_fu_474_p2 == 1'd1)) begin
            preamble_buf_idx_V <= 14'd0;
        end else if ((tmp_s_fu_474_p2 == 1'd0)) begin
            preamble_buf_idx_V <= tmp_7_fu_480_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_391)) begin
        if ((tmp_6_fu_520_p2 == 1'd1)) begin
            preamble_num_idx_V <= tmp_12_fu_544_p2;
        end else if ((tmp_6_fu_520_p2 == 1'd0)) begin
            preamble_num_idx_V <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_339)) begin
        if ((1'b1 == ap_condition_484)) begin
            state_var_V <= 3'd0;
        end else if ((state_var_V == 3'd0)) begin
            state_var_V <= storemerge2_cast_fu_586_p1;
        end else if (((tmp_s_fu_474_p2 == 1'd1) & (state_var_V_load_load_fu_315_p1 == 3'd2))) begin
            state_var_V <= 3'd3;
        end else if ((state_var_V_load_load_fu_315_p1 == 3'd3)) begin
            state_var_V <= ap_phi_mux_storemerge3_phi_fu_262_p6;
        end else if ((state_var_V_load_load_fu_315_p1 == 3'd4)) begin
            state_var_V <= ap_phi_mux_storemerge_phi_fu_251_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_339)) begin
        if ((1'b1 == ap_condition_462)) begin
            trail_zero_idx_V <= 18'd0;
        end else if ((state_var_V_load_load_fu_315_p1 == 3'd4)) begin
            trail_zero_idx_V <= ap_phi_mux_storemerge1_phi_fu_241_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter1_fsm_state2) & (tmp_reg_700_pp0_iter0_reg == 1'd1) & (state_var_V_load_reg_650_pp0_iter0_reg == 3'd0))) begin
        amp_divider_V <= p_Result_6_reg_704;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_data_1_load_A == 1'b1)) begin
        data_out_V_data_1_payload_A <= data_out_V_data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_data_1_load_B == 1'b1)) begin
        data_out_V_data_1_payload_B <= data_out_V_data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_last_V_1_load_A == 1'b1)) begin
        data_out_V_last_V_1_payload_A <= grp_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_last_V_1_load_B == 1'b1)) begin
        data_out_V_last_V_1_payload_B <= grp_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1) & (tmp_nbreadreq_fu_150_p4 == 1'd1) & (state_var_V == 3'd0))) begin
        p_Result_6_reg_704 <= {{param1_V[15:12]}};
        trig_type_V <= tmp_14_fu_566_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter1_fsm_state2) & (state_var_V_load_reg_650_pp0_iter0_reg == 3'd2))) begin
        preamble_vec_M_imag_2_reg_719 <= preamble_vec_M_imag_q0;
        preamble_vec_M_real_2_reg_724 <= preamble_vec_M_real_q0;
        wlan_preamble_vec_M_3_reg_709 <= wlan_preamble_vec_M_1_q0;
        wlan_preamble_vec_M_5_reg_714 <= wlan_preamble_vec_M_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        state_var_V_load_reg_650 <= state_var_V;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        state_var_V_load_reg_650_pp0_iter1_reg <= state_var_V_load_reg_650;
        tmp_3_reg_666_pp0_iter1_reg <= tmp_3_reg_666;
        tmp_5_reg_655_pp0_iter1_reg <= tmp_5_reg_655;
        tmp_8_reg_659_pp0_iter1_reg <= tmp_8_reg_659;
        tmp_reg_700_pp0_iter1_reg <= tmp_reg_700;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        state_var_V_load_reg_650_pp0_iter2_reg <= state_var_V_load_reg_650_pp0_iter1_reg;
        tmp_5_reg_655_pp0_iter2_reg <= tmp_5_reg_655_pp0_iter1_reg;
        tmp_8_reg_659_pp0_iter2_reg <= tmp_8_reg_659_pp0_iter1_reg;
        tmp_reg_700_pp0_iter2_reg <= tmp_reg_700_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b1 == ap_CS_iter2_fsm_state3) & (tmp_5_reg_655_pp0_iter1_reg == 1'd1) & (state_var_V_load_reg_650_pp0_iter1_reg == 3'd4)) | (~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b1 == ap_CS_iter2_fsm_state3) & (tmp_8_reg_659_pp0_iter1_reg == 1'd1) & (state_var_V_load_reg_650_pp0_iter1_reg == 3'd3)) | (~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b1 == ap_CS_iter2_fsm_state3) & (state_var_V_load_reg_650_pp0_iter1_reg == 3'd2)) | (~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b1 == ap_CS_iter2_fsm_state3) & (tmp_reg_700_pp0_iter1_reg == 1'd0) & (state_var_V_load_reg_650_pp0_iter1_reg == 3'd0)))) begin
        tlast_counter_V <= grp_fu_301_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1) & (state_var_V_load_load_fu_315_p1 == 3'd2))) begin
        tmp_3_reg_666 <= tmp_3_fu_456_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1) & (state_var_V_load_load_fu_315_p1 == 3'd4))) begin
        tmp_5_reg_655 <= tmp_5_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1) & (state_var_V_load_load_fu_315_p1 == 3'd3))) begin
        tmp_8_reg_659 <= tmp_8_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1) & (state_var_V == 3'd0))) begin
        tmp_reg_700 <= tmp_nbreadreq_fu_150_p4;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (state_var_V_load_load_fu_315_p1 == 3'd4))) begin
        if ((tmp_5_fu_349_p2 == 1'd0)) begin
            ap_phi_mux_storemerge1_phi_fu_241_p4 = 18'd0;
        end else if ((tmp_5_fu_349_p2 == 1'd1)) begin
            ap_phi_mux_storemerge1_phi_fu_241_p4 = tmp_11_fu_355_p2;
        end else begin
            ap_phi_mux_storemerge1_phi_fu_241_p4 = ap_phi_reg_pp0_iter0_storemerge1_reg_238;
        end
    end else begin
        ap_phi_mux_storemerge1_phi_fu_241_p4 = ap_phi_reg_pp0_iter0_storemerge1_reg_238;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (state_var_V == 3'd0))) begin
        if ((tmp_nbreadreq_fu_150_p4 == 1'd0)) begin
            ap_phi_mux_storemerge2_phi_fu_276_p4 = 2'd0;
        end else if ((tmp_nbreadreq_fu_150_p4 == 1'd1)) begin
            ap_phi_mux_storemerge2_phi_fu_276_p4 = 2'd2;
        end else begin
            ap_phi_mux_storemerge2_phi_fu_276_p4 = ap_phi_reg_pp0_iter0_storemerge2_reg_273;
        end
    end else begin
        ap_phi_mux_storemerge2_phi_fu_276_p4 = ap_phi_reg_pp0_iter0_storemerge2_reg_273;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (state_var_V_load_load_fu_315_p1 == 3'd3))) begin
        if (((tmp_10_fu_420_p2 == 1'd1) & (tmp_8_fu_400_p2 == 1'd0))) begin
            ap_phi_mux_storemerge3_phi_fu_262_p6 = 3'd2;
        end else if (((tmp_10_fu_420_p2 == 1'd0) & (tmp_8_fu_400_p2 == 1'd0))) begin
            ap_phi_mux_storemerge3_phi_fu_262_p6 = 3'd4;
        end else if ((tmp_8_fu_400_p2 == 1'd1)) begin
            ap_phi_mux_storemerge3_phi_fu_262_p6 = 3'd3;
        end else begin
            ap_phi_mux_storemerge3_phi_fu_262_p6 = ap_phi_reg_pp0_iter0_storemerge3_reg_259;
        end
    end else begin
        ap_phi_mux_storemerge3_phi_fu_262_p6 = ap_phi_reg_pp0_iter0_storemerge3_reg_259;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (state_var_V_load_load_fu_315_p1 == 3'd4))) begin
        if ((tmp_5_fu_349_p2 == 1'd0)) begin
            ap_phi_mux_storemerge_phi_fu_251_p4 = 3'd0;
        end else if ((tmp_5_fu_349_p2 == 1'd1)) begin
            ap_phi_mux_storemerge_phi_fu_251_p4 = 3'd4;
        end else begin
            ap_phi_mux_storemerge_phi_fu_251_p4 = ap_phi_reg_pp0_iter0_storemerge_reg_248;
        end
    end else begin
        ap_phi_mux_storemerge_phi_fu_251_p4 = ap_phi_reg_pp0_iter0_storemerge_reg_248;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (tmp_nbreadreq_fu_150_p4 == 1'd1) & (state_var_V == 3'd0))) begin
        data_in_TDATA_blk_n = data_in_TVALID;
    end else begin
        data_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_predicate_op72_read_state1 == 1'b1))) begin
        data_in_TREADY = 1'b1;
    end else begin
        data_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_iter3_fsm_state4) & (tmp_5_reg_655_pp0_iter2_reg == 1'd1) & (state_var_V_load_reg_650_pp0_iter2_reg == 3'd4)) | ((1'b1 == ap_CS_iter3_fsm_state4) & (tmp_8_reg_659_pp0_iter2_reg == 1'd1) & (state_var_V_load_reg_650_pp0_iter2_reg == 3'd3)) | ((1'b1 == ap_CS_iter3_fsm_state4) & (state_var_V_load_reg_650_pp0_iter2_reg == 3'd2)) | ((1'b1 == ap_CS_iter3_fsm_state4) & (tmp_reg_700_pp0_iter2_reg == 1'd0) & (state_var_V_load_reg_650_pp0_iter2_reg == 3'd0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (tmp_5_reg_655_pp0_iter1_reg == 1'd1) & (state_var_V_load_reg_650_pp0_iter1_reg == 3'd4)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (tmp_8_reg_659_pp0_iter1_reg == 1'd1) & (state_var_V_load_reg_650_pp0_iter1_reg == 3'd3)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (state_var_V_load_reg_650_pp0_iter1_reg == 3'd2)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (tmp_reg_700_pp0_iter1_reg == 1'd0) & (state_var_V_load_reg_650_pp0_iter1_reg == 3'd0)))) begin
        data_out_TDATA_blk_n = data_out_V_data_1_state[1'd1];
    end else begin
        data_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0))) & (1'b1 == ap_CS_iter2_fsm_state3) & (state_var_V_load_reg_650_pp0_iter1_reg == 3'd2))) begin
        data_out_V_data_1_data_in = tmp_data_1_fu_637_p3;
    end else if (((~((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0))) & (1'b1 == ap_CS_iter2_fsm_state3) & (ap_predicate_op117_write_state3 == 1'b1)) | (~((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0))) & (1'b1 == ap_CS_iter2_fsm_state3) & (ap_predicate_op98_write_state3 == 1'b1)) | (~((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0))) & (1'b1 == ap_CS_iter2_fsm_state3) & (ap_predicate_op92_write_state3 == 1'b1)))) begin
        data_out_V_data_1_data_in = 32'd0;
    end else begin
        data_out_V_data_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((data_out_V_data_1_sel == 1'b1)) begin
        data_out_V_data_1_data_out = data_out_V_data_1_payload_B;
    end else begin
        data_out_V_data_1_data_out = data_out_V_data_1_payload_A;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b1 == ap_CS_iter2_fsm_state3) & (ap_predicate_op117_write_state3 == 1'b1)) | (~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b1 == ap_CS_iter2_fsm_state3) & (ap_predicate_op98_write_state3 == 1'b1)) | (~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b1 == ap_CS_iter2_fsm_state3) & (ap_predicate_op92_write_state3 == 1'b1)) | (~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b1 == ap_CS_iter2_fsm_state3) & (state_var_V_load_reg_650_pp0_iter1_reg == 3'd2)))) begin
        data_out_V_data_1_vld_in = 1'b1;
    end else begin
        data_out_V_data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((data_out_V_last_V_1_sel == 1'b1)) begin
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_B;
    end else begin
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b1 == ap_CS_iter2_fsm_state3) & (ap_predicate_op117_write_state3 == 1'b1)) | (~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b1 == ap_CS_iter2_fsm_state3) & (ap_predicate_op98_write_state3 == 1'b1)) | (~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b1 == ap_CS_iter2_fsm_state3) & (ap_predicate_op92_write_state3 == 1'b1)) | (~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b1 == ap_CS_iter2_fsm_state3) & (state_var_V_load_reg_650_pp0_iter1_reg == 3'd2)))) begin
        data_out_V_last_V_1_vld_in = 1'b1;
    end else begin
        data_out_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        preamble_vec_M_imag_ce0 = 1'b1;
    end else begin
        preamble_vec_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        preamble_vec_M_real_ce0 = 1'b1;
    end else begin
        preamble_vec_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        wlan_preamble_vec_M_1_ce0 = 1'b1;
    end else begin
        wlan_preamble_vec_M_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        wlan_preamble_vec_M_ce0 = 1'b1;
    end else begin
        wlan_preamble_vec_M_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~(((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & ~((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~(((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((data_in_TVALID == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_predicate_op72_read_state1 == 1'b1))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if ((~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else if ((~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b0 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~(((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter3_fsm)
        ap_ST_iter3_fsm_state4 : begin
            if ((~((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)) & (1'b1 == ap_CS_iter2_fsm_state3) & (1'b0 == ap_block_state3_io))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else if ((~((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)) & ((1'b0 == ap_CS_iter2_fsm_state3) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end
        end
        ap_ST_iter3_fsm_state0 : begin
            if ((~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io)))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter3_fsm = 'bx;
        end
    endcase
end

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm[32'd1];

assign ap_CS_iter3_fsm_state4 = ap_CS_iter3_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((data_out_V_data_1_ack_in == 1'b0) & (ap_predicate_op117_write_state3 == 1'b1)) | ((data_out_V_data_1_ack_in == 1'b0) & (ap_predicate_op98_write_state3 == 1'b1)) | ((data_out_V_data_1_ack_in == 1'b0) & (ap_predicate_op92_write_state3 == 1'b1)) | ((data_out_V_data_1_ack_in == 1'b0) & (state_var_V_load_reg_650_pp0_iter1_reg == 3'd2)));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = (((data_out_V_data_1_ack_in == 1'b0) & (ap_predicate_op146_write_state4 == 1'b1)) | ((data_out_V_data_1_ack_in == 1'b0) & (ap_predicate_op138_write_state4 == 1'b1)) | ((data_out_V_data_1_ack_in == 1'b0) & (ap_predicate_op136_write_state4 == 1'b1)) | ((data_out_V_data_1_ack_in == 1'b0) & (state_var_V_load_reg_650_pp0_iter2_reg == 3'd2)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_condition_339 = (~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_condition_355 = (~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1) & (state_var_V_load_load_fu_315_p1 == 3'd3));
end

always @ (*) begin
    ap_condition_361 = (~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1) & (state_var_V_load_load_fu_315_p1 == 3'd2));
end

always @ (*) begin
    ap_condition_391 = (~(((data_in_TVALID == 1'b0) & (ap_predicate_op72_read_state1 == 1'b1)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1) & (tmp_s_fu_474_p2 == 1'd1) & (state_var_V_load_load_fu_315_p1 == 3'd2));
end

always @ (*) begin
    ap_condition_462 = ((tmp_10_fu_420_p2 == 1'd0) & (tmp_8_fu_400_p2 == 1'd0) & (state_var_V_load_load_fu_315_p1 == 3'd3));
end

always @ (*) begin
    ap_condition_484 = (~(state_var_V_load_load_fu_315_p1 == 3'd2) & ~(state_var_V_load_load_fu_315_p1 == 3'd3) & ~(state_var_V_load_load_fu_315_p1 == 3'd4) & ~(state_var_V == 3'd0));
end

always @ (*) begin
    ap_condition_492 = ((tmp_s_fu_474_p2 == 1'd1) & (tmp_6_fu_520_p2 == 1'd0) & (state_var_V_load_load_fu_315_p1 == 3'd2));
end

assign ap_phi_reg_pp0_iter0_storemerge1_reg_238 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge2_reg_273 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge3_reg_259 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge_reg_248 = 'bx;

always @ (*) begin
    ap_predicate_op117_write_state3 = ((tmp_reg_700_pp0_iter1_reg == 1'd0) & (state_var_V_load_reg_650_pp0_iter1_reg == 3'd0));
end

always @ (*) begin
    ap_predicate_op136_write_state4 = ((tmp_5_reg_655_pp0_iter2_reg == 1'd1) & (state_var_V_load_reg_650_pp0_iter2_reg == 3'd4));
end

always @ (*) begin
    ap_predicate_op138_write_state4 = ((tmp_8_reg_659_pp0_iter2_reg == 1'd1) & (state_var_V_load_reg_650_pp0_iter2_reg == 3'd3));
end

always @ (*) begin
    ap_predicate_op146_write_state4 = ((tmp_reg_700_pp0_iter2_reg == 1'd0) & (state_var_V_load_reg_650_pp0_iter2_reg == 3'd0));
end

always @ (*) begin
    ap_predicate_op72_read_state1 = ((tmp_nbreadreq_fu_150_p4 == 1'd1) & (state_var_V == 3'd0));
end

always @ (*) begin
    ap_predicate_op92_write_state3 = ((tmp_5_reg_655_pp0_iter1_reg == 1'd1) & (state_var_V_load_reg_650_pp0_iter1_reg == 3'd4));
end

always @ (*) begin
    ap_predicate_op98_write_state3 = ((tmp_8_reg_659_pp0_iter1_reg == 1'd1) & (state_var_V_load_reg_650_pp0_iter1_reg == 3'd3));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign data_out_TDATA = data_out_V_data_1_data_out;

assign data_out_TLAST = data_out_V_last_V_1_data_out;

assign data_out_TVALID = data_out_V_last_V_1_state[1'd0];

assign data_out_V_data_1_ack_in = data_out_V_data_1_state[1'd1];

assign data_out_V_data_1_ack_out = data_out_TREADY;

assign data_out_V_data_1_load_A = (~data_out_V_data_1_sel_wr & data_out_V_data_1_state_cmp_full);

assign data_out_V_data_1_load_B = (data_out_V_data_1_state_cmp_full & data_out_V_data_1_sel_wr);

assign data_out_V_data_1_sel = data_out_V_data_1_sel_rd;

assign data_out_V_data_1_state_cmp_full = ((data_out_V_data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign data_out_V_data_1_vld_out = data_out_V_data_1_state[1'd0];

assign data_out_V_last_V_1_ack_in = data_out_V_last_V_1_state[1'd1];

assign data_out_V_last_V_1_ack_out = data_out_TREADY;

assign data_out_V_last_V_1_load_A = (~data_out_V_last_V_1_sel_wr & data_out_V_last_V_1_state_cmp_full);

assign data_out_V_last_V_1_load_B = (data_out_V_last_V_1_state_cmp_full & data_out_V_last_V_1_sel_wr);

assign data_out_V_last_V_1_sel = data_out_V_last_V_1_sel_rd;

assign data_out_V_last_V_1_state_cmp_full = ((data_out_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign data_out_V_last_V_1_vld_out = data_out_V_last_V_1_state[1'd0];

assign grp_fu_288_p2 = ((tlast_counter_V > 10'd14) ? 1'b1 : 1'b0);

assign grp_fu_295_p2 = (tlast_counter_V + 10'd1);

assign grp_fu_301_p3 = ((grp_fu_288_p2[0:0] === 1'b1) ? 10'd0 : grp_fu_295_p2);

assign lhs_V_cast_fu_502_p1 = tmp_15_fu_498_p1;

assign p_Result_cast_fu_416_p1 = tmp_16_fu_412_p1;

assign param_out_V = state_var_V_load_reg_650_pp0_iter2_reg;

assign preamble_vec_M_imag_address0 = tmp_1_fu_466_p1;

assign preamble_vec_M_real_address0 = tmp_1_fu_466_p1;

assign r_V_1_fu_341_p3 = {{tmp_2_fu_331_p4}, {10'd0}};

assign r_V_4_fu_625_p2 = $signed(tmp_18_pn_in_fu_620_p3) >>> sh_cast_fu_611_p1;

assign r_V_5_fu_631_p2 = $signed(tmp_20_pn_in_fu_615_p3) >>> sh_cast_fu_611_p1;

assign r_V_fu_384_p3 = {{tmp_4_fu_374_p4}, {4'd0}};

assign ret_V_fu_506_p2 = ($signed(9'd511) + $signed(lhs_V_cast_fu_502_p1));

assign sh_cast_fu_611_p1 = amp_divider_V;

assign state_var_V_load_load_fu_315_p1 = state_var_V;

assign state_var_V_load_reg_650_pp0_iter0_reg = state_var_V_load_reg_650;

assign storemerge2_cast_fu_586_p1 = ap_phi_mux_storemerge2_phi_fu_276_p4;

assign tmp_10_fu_420_p2 = ((busytone_num_idx_V < p_Result_cast_fu_416_p1) ? 1'b1 : 1'b0);

assign tmp_11_fu_355_p2 = (trail_zero_idx_V + 18'd1);

assign tmp_12_fu_544_p2 = (preamble_num_idx_V + 8'd1);

assign tmp_13_fu_532_p2 = (busytone_num_idx_V + 18'd1);

assign tmp_14_fu_566_p1 = data_in_TDATA[3:0];

assign tmp_15_fu_498_p1 = param2_V[7:0];

assign tmp_16_cast_fu_516_p1 = preamble_num_idx_V;

assign tmp_16_fu_412_p1 = param1_V[11:0];

assign tmp_18_pn_in_fu_620_p3 = ((tmp_3_reg_666_pp0_iter1_reg[0:0] === 1'b1) ? wlan_preamble_vec_M_3_reg_709 : preamble_vec_M_imag_2_reg_719);

assign tmp_1_fu_466_p1 = preamble_buf_idx_V;

assign tmp_20_pn_in_fu_615_p3 = ((tmp_3_reg_666_pp0_iter1_reg[0:0] === 1'b1) ? wlan_preamble_vec_M_5_reg_714 : preamble_vec_M_real_2_reg_724);

assign tmp_2_fu_331_p4 = {{param2_V[15:8]}};

assign tmp_3_fu_456_p2 = ((trig_type_V == 4'd1) ? 1'b1 : 1'b0);

assign tmp_4_fu_374_p4 = {{param2_V[31:16]}};

assign tmp_5_fu_349_p2 = ((trail_zero_idx_V < r_V_1_fu_341_p3) ? 1'b1 : 1'b0);

assign tmp_6_cast_fu_396_p1 = loop_zero_idx_V;

assign tmp_6_fu_520_p2 = (($signed(tmp_16_cast_fu_516_p1) < $signed(ret_V_fu_506_p2)) ? 1'b1 : 1'b0);

assign tmp_7_fu_480_p2 = (preamble_buf_idx_V + 14'd1);

assign tmp_8_fu_400_p2 = ((tmp_6_cast_fu_396_p1 < r_V_fu_384_p3) ? 1'b1 : 1'b0);

assign tmp_9_fu_438_p2 = (loop_zero_idx_V + 18'd1);

assign tmp_data_1_fu_637_p3 = {{r_V_5_fu_631_p2}, {r_V_4_fu_625_p2}};

assign tmp_nbreadreq_fu_150_p4 = data_in_TVALID;

assign tmp_reg_700_pp0_iter0_reg = tmp_reg_700;

assign tmp_s_fu_474_p2 = ((preamble_buf_idx_V == 14'd16383) ? 1'b1 : 1'b0);

assign wlan_preamble_vec_M_1_address0 = tmp_1_fu_466_p1;

assign wlan_preamble_vec_M_address0 = tmp_1_fu_466_p1;

endmodule //busytone_tx
