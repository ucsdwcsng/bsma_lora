// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="packet_det,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k325tffg900-3,HLS_INPUT_CLOCK=4.650000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.610000,HLS_SYN_LAT=21,HLS_SYN_TPT=5,HLS_SYN_MEM=17,HLS_SYN_DSP=78,HLS_SYN_FF=6368,HLS_SYN_LUT=3918,HLS_VERSION=2018_3}" *)

module packet_det (
        ap_clk,
        ap_rst_n,
        data_in_TDATA,
        data_in_TVALID,
        data_in_TREADY,
        data_in_TLAST,
        data_out_TDATA,
        data_out_TVALID,
        data_out_TREADY,
        data_out_TLAST,
        power_threshold_in_V
);

parameter    ap_ST_iter0_fsm_state1 = 5'd1;
parameter    ap_ST_iter0_fsm_state2 = 5'd2;
parameter    ap_ST_iter0_fsm_state3 = 5'd4;
parameter    ap_ST_iter0_fsm_state4 = 5'd8;
parameter    ap_ST_iter0_fsm_state5 = 5'd16;
parameter    ap_ST_iter1_fsm_state6 = 6'd2;
parameter    ap_ST_iter1_fsm_state7 = 6'd4;
parameter    ap_ST_iter1_fsm_state8 = 6'd8;
parameter    ap_ST_iter1_fsm_state9 = 6'd16;
parameter    ap_ST_iter1_fsm_state10 = 6'd32;
parameter    ap_ST_iter2_fsm_state11 = 6'd2;
parameter    ap_ST_iter2_fsm_state12 = 6'd4;
parameter    ap_ST_iter2_fsm_state13 = 6'd8;
parameter    ap_ST_iter2_fsm_state14 = 6'd16;
parameter    ap_ST_iter2_fsm_state15 = 6'd32;
parameter    ap_ST_iter3_fsm_state16 = 6'd2;
parameter    ap_ST_iter3_fsm_state17 = 6'd4;
parameter    ap_ST_iter3_fsm_state18 = 6'd8;
parameter    ap_ST_iter3_fsm_state19 = 6'd16;
parameter    ap_ST_iter3_fsm_state20 = 6'd32;
parameter    ap_ST_iter4_fsm_state21 = 3'd2;
parameter    ap_ST_iter4_fsm_state22 = 3'd4;
parameter    ap_ST_iter1_fsm_state0 = 6'd1;
parameter    ap_ST_iter2_fsm_state0 = 6'd1;
parameter    ap_ST_iter3_fsm_state0 = 6'd1;
parameter    ap_ST_iter4_fsm_state0 = 3'd1;

input   ap_clk;
input   ap_rst_n;
input  [31:0] data_in_TDATA;
input   data_in_TVALID;
output   data_in_TREADY;
input  [0:0] data_in_TLAST;
output  [31:0] data_out_TDATA;
output   data_out_TVALID;
input   data_out_TREADY;
output  [0:0] data_out_TLAST;
input  [31:0] power_threshold_in_V;

 reg    ap_rst_n_inv;
reg   [31:0] data_in_V_data_0_data_out;
wire    data_in_V_data_0_vld_in;
wire    data_in_V_data_0_vld_out;
wire    data_in_V_data_0_ack_in;
reg    data_in_V_data_0_ack_out;
reg   [31:0] data_in_V_data_0_payload_A;
reg   [31:0] data_in_V_data_0_payload_B;
reg    data_in_V_data_0_sel_rd;
reg    data_in_V_data_0_sel_wr;
wire    data_in_V_data_0_sel;
wire    data_in_V_data_0_load_A;
wire    data_in_V_data_0_load_B;
reg   [1:0] data_in_V_data_0_state;
wire    data_in_V_data_0_state_cmp_full;
reg   [0:0] data_in_V_last_V_0_data_out;
wire    data_in_V_last_V_0_vld_in;
wire    data_in_V_last_V_0_vld_out;
wire    data_in_V_last_V_0_ack_in;
reg    data_in_V_last_V_0_ack_out;
reg   [0:0] data_in_V_last_V_0_payload_A;
reg   [0:0] data_in_V_last_V_0_payload_B;
reg    data_in_V_last_V_0_sel_rd;
reg    data_in_V_last_V_0_sel_wr;
wire    data_in_V_last_V_0_sel;
wire    data_in_V_last_V_0_load_A;
wire    data_in_V_last_V_0_load_B;
reg   [1:0] data_in_V_last_V_0_state;
wire    data_in_V_last_V_0_state_cmp_full;
reg   [31:0] data_out_V_data_1_data_out;
reg    data_out_V_data_1_vld_in;
wire    data_out_V_data_1_vld_out;
wire    data_out_V_data_1_ack_in;
wire    data_out_V_data_1_ack_out;
reg   [31:0] data_out_V_data_1_payload_A;
reg   [31:0] data_out_V_data_1_payload_B;
reg    data_out_V_data_1_sel_rd;
reg    data_out_V_data_1_sel_wr;
wire    data_out_V_data_1_sel;
wire    data_out_V_data_1_load_A;
wire    data_out_V_data_1_load_B;
reg   [1:0] data_out_V_data_1_state;
wire    data_out_V_data_1_state_cmp_full;
reg   [0:0] data_out_V_last_V_1_data_out;
reg    data_out_V_last_V_1_vld_in;
wire    data_out_V_last_V_1_vld_out;
wire    data_out_V_last_V_1_ack_in;
wire    data_out_V_last_V_1_ack_out;
reg   [0:0] data_out_V_last_V_1_payload_A;
reg   [0:0] data_out_V_last_V_1_payload_B;
reg    data_out_V_last_V_1_sel_rd;
reg    data_out_V_last_V_1_sel_wr;
wire    data_out_V_last_V_1_sel;
wire    data_out_V_last_V_1_load_A;
wire    data_out_V_last_V_1_load_B;
reg   [1:0] data_out_V_last_V_1_state;
wire    data_out_V_last_V_1_state_cmp_full;
reg   [0:0] state_V;
reg   [10:0] idxnw_V;
reg   [10:0] prev_buffer_M_real_s_address0;
reg    prev_buffer_M_real_s_ce0;
reg    prev_buffer_M_real_s_we0;
wire   [15:0] prev_buffer_M_real_s_q0;
reg   [10:0] prev_buffer_M_imag_s_address0;
reg    prev_buffer_M_imag_s_ce0;
reg    prev_buffer_M_imag_s_we0;
wire   [15:0] prev_buffer_M_imag_s_q0;
reg   [10:0] buffer_M_real_V_address0;
reg    buffer_M_real_V_ce0;
reg    buffer_M_real_V_we0;
wire   [15:0] buffer_M_real_V_d0;
wire   [15:0] buffer_M_real_V_q0;
reg   [10:0] buffer_M_imag_V_address0;
reg    buffer_M_imag_V_ce0;
reg    buffer_M_imag_V_we0;
wire   [15:0] buffer_M_imag_V_d0;
wire   [15:0] buffer_M_imag_V_q0;
reg   [10:0] ToSubE_vec_V_address0;
reg    ToSubE_vec_V_ce0;
reg    ToSubE_vec_V_we0;
wire   [31:0] ToSubE_vec_V_q0;
reg   [10:0] ToSubE_prev_vec_V_address0;
reg    ToSubE_prev_vec_V_ce0;
reg    ToSubE_prev_vec_V_we0;
wire   [31:0] ToSubE_prev_vec_V_q0;
reg   [43:0] AutoCorr_M_real_V;
reg   [43:0] AutoCorr_M_imag_V;
reg   [43:0] Energy_V;
reg   [43:0] Energy_prev_V;
reg   [9:0] idxnw_lev_V;
reg   [9:0] level_buf_V_address0;
reg    level_buf_V_ce0;
reg    level_buf_V_we0;
wire   [2:0] level_buf_V_d0;
wire   [2:0] level_buf_V_q0;
reg   [9:0] idxnw_lev_use_V;
wire   [2:0] thresh_vec_address0;
reg    thresh_vec_ce0;
wire   [31:0] thresh_vec_q0;
reg    data_in_TDATA_blk_n;
reg   [4:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state2;
reg   [5:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state6;
wire    ap_CS_iter1_fsm_state7;
wire    ap_CS_iter1_fsm_state8;
wire    ap_CS_iter1_fsm_state9;
wire    ap_CS_iter1_fsm_state10;
reg   [5:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state11;
wire    ap_CS_iter2_fsm_state12;
wire    ap_CS_iter2_fsm_state13;
wire    ap_CS_iter2_fsm_state14;
wire    ap_CS_iter2_fsm_state15;
reg   [5:0] ap_CS_iter3_fsm;
wire    ap_CS_iter3_fsm_state16;
wire    ap_CS_iter3_fsm_state17;
wire    ap_CS_iter3_fsm_state18;
wire    ap_CS_iter3_fsm_state19;
wire    ap_CS_iter3_fsm_state20;
reg   [2:0] ap_CS_iter4_fsm;
wire    ap_CS_iter4_fsm_state21;
wire    ap_CS_iter4_fsm_state22;
reg   [0:0] state_V_load_reg_1261;
reg    data_out_TDATA_blk_n;
reg   [0:0] state_V_load_reg_1261_pp0_iter3_reg;
wire   [0:0] state_V_load_load_fu_284_p1;
wire    ap_CS_iter0_fsm_state1;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state10_pp0_stage4_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state12_pp0_stage1_iter2;
wire    ap_block_state13_pp0_stage2_iter2;
wire    ap_block_state14_pp0_stage3_iter2;
wire    ap_block_state15_pp0_stage4_iter2;
wire    ap_block_state16_pp0_stage0_iter3;
wire    ap_block_state17_pp0_stage1_iter3;
wire    ap_block_state18_pp0_stage2_iter3;
wire    ap_block_state19_pp0_stage3_iter3;
wire    ap_block_state20_pp0_stage4_iter3;
wire    ap_block_state21_pp0_stage0_iter4;
reg    ap_block_state21_io;
reg    ap_block_state22_pp0_stage1_iter4;
reg    ap_block_state22_io;
reg   [0:0] state_V_load_reg_1261_pp0_iter0_reg;
wire    ap_CS_iter0_fsm_state5;
wire    ap_block_state5_pp0_stage4_iter0;
reg   [0:0] state_V_load_reg_1261_pp0_iter1_reg;
reg   [0:0] state_V_load_reg_1261_pp0_iter2_reg;
reg   [10:0] prev_buffer_M_real_1_reg_1265;
reg   [10:0] prev_buffer_M_imag_1_reg_1270;
reg   [10:0] buffer_M_real_V_add_reg_1275;
reg   [10:0] buffer_M_imag_V_add_reg_1280;
reg   [10:0] ToSubE_vec_V_addr_reg_1285;
reg   [10:0] ToSubE_prev_vec_V_ad_reg_1290;
reg   [0:0] tmp_last_V_reg_1295;
reg    ap_block_state2_pp0_stage1_iter0;
reg   [0:0] tmp_last_V_reg_1295_pp0_iter0_reg;
reg   [0:0] tmp_last_V_reg_1295_pp0_iter1_reg;
reg   [0:0] tmp_last_V_reg_1295_pp0_iter2_reg;
reg   [0:0] tmp_last_V_reg_1295_pp0_iter3_reg;
wire  signed [15:0] p_Val2_15_fu_322_p1;
reg  signed [15:0] p_Val2_15_reg_1300;
wire  signed [15:0] p_Val2_2_fu_327_p4;
reg  signed [15:0] p_Val2_2_reg_1307;
reg  signed [15:0] p_Val2_s_reg_1313;
reg  signed [15:0] p_Val2_1_reg_1319;
wire   [31:0] p_r_M_imag_V_1_fu_350_p2;
reg   [31:0] p_r_M_imag_V_1_reg_1324;
reg   [15:0] p_Val2_6_reg_1329;
wire  signed [30:0] p_Val2_14_fu_356_p3;
reg  signed [30:0] p_Val2_14_reg_1340;
reg   [31:0] ToSubE_V_reg_1346;
reg   [31:0] ToSubE_prev_V_reg_1351;
wire   [31:0] p_r_M_imag_V_2_fu_368_p2;
reg   [31:0] p_r_M_imag_V_2_reg_1356;
wire  signed [31:0] r_V_26_fu_1235_p2;
reg  signed [31:0] r_V_26_reg_1361;
wire  signed [61:0] r_V_2_i_cast_fu_395_p1;
wire    ap_CS_iter0_fsm_state3;
wire    ap_block_state3_pp0_stage2_iter0;
wire  signed [61:0] r_V_8_i_cast_fu_403_p1;
wire  signed [60:0] r_V_4_i_cast_fu_413_p1;
wire  signed [60:0] r_V_10_i_cast_fu_471_p1;
wire  signed [31:0] grp_fu_1241_p3;
reg   [31:0] ToAddE_V_reg_1426;
wire  signed [31:0] r_V_28_fu_1248_p2;
reg  signed [31:0] r_V_28_reg_1432;
wire  signed [31:0] grp_fu_1254_p3;
reg   [31:0] ToAddE_prev_V_reg_1437;
wire    ap_CS_iter0_fsm_state4;
wire    ap_block_state4_pp0_stage3_iter0;
wire   [34:0] tmp_20_i_fu_525_p2;
reg   [34:0] tmp_20_i_reg_1443;
wire   [61:0] grp_fu_407_p2;
reg   [61:0] r_V_17_reg_1448;
wire   [60:0] grp_fu_422_p2;
reg   [60:0] r_V_18_reg_1453;
wire   [61:0] grp_fu_428_p2;
reg   [61:0] r_V_19_reg_1458;
wire   [60:0] grp_fu_434_p2;
reg   [60:0] r_V_20_reg_1463;
wire   [61:0] grp_fu_465_p2;
reg   [61:0] r_V_21_reg_1468;
wire   [60:0] grp_fu_482_p2;
reg   [60:0] r_V_22_reg_1473;
wire   [61:0] grp_fu_488_p2;
reg   [61:0] r_V_23_reg_1478;
wire   [60:0] grp_fu_494_p2;
reg   [60:0] r_V_24_reg_1483;
wire  signed [43:0] p_Val2_42_fu_544_p2;
reg  signed [43:0] p_Val2_42_reg_1488;
reg  signed [43:0] p_Val2_42_reg_1488_pp0_iter1_reg;
reg  signed [43:0] p_Val2_42_reg_1488_pp0_iter2_reg;
wire  signed [43:0] tmp_25_i_fu_592_p2;
reg  signed [43:0] tmp_25_i_reg_1494;
reg  signed [43:0] tmp_25_i_reg_1494_pp0_iter1_reg;
wire   [0:0] slt_fu_616_p2;
reg   [0:0] slt_reg_1501;
reg   [0:0] slt_reg_1501_pp0_iter1_reg;
reg   [0:0] slt_reg_1501_pp0_iter2_reg;
reg   [0:0] slt_reg_1501_pp0_iter3_reg;
wire   [43:0] p_Val2_46_fu_762_p2;
reg   [43:0] p_Val2_46_reg_1506;
reg   [43:0] p_Val2_46_reg_1506_pp0_iter1_reg;
reg   [43:0] p_Val2_46_reg_1506_pp0_iter2_reg;
wire   [43:0] p_Val2_34_fu_768_p2;
reg   [43:0] p_Val2_34_reg_1514;
reg   [43:0] p_Val2_34_reg_1514_pp0_iter1_reg;
reg   [43:0] p_Val2_34_reg_1514_pp0_iter2_reg;
wire  signed [77:0] tmp_i19_cast1_fu_786_p1;
wire  signed [76:0] tmp_i19_cast_fu_789_p1;
reg   [0:0] tmp_3_reg_1536;
reg   [0:0] tmp_3_reg_1536_pp0_iter1_reg;
reg   [0:0] tmp_3_reg_1536_pp0_iter2_reg;
reg   [0:0] tmp_3_reg_1536_pp0_iter3_reg;
reg   [0:0] tmp_4_reg_1542;
reg   [0:0] tmp_4_reg_1542_pp0_iter1_reg;
reg   [0:0] tmp_4_reg_1542_pp0_iter2_reg;
reg   [0:0] tmp_4_reg_1542_pp0_iter3_reg;
wire   [77:0] grp_fu_792_p2;
reg   [77:0] r_V_i_reg_1548;
wire   [77:0] grp_fu_798_p2;
reg   [77:0] r_V_10_1_i_reg_1553;
wire   [76:0] grp_fu_804_p2;
reg   [76:0] r_V_10_3_i_reg_1558;
wire   [76:0] grp_fu_810_p2;
reg   [76:0] r_V_10_4_i_reg_1563;
wire   [76:0] grp_fu_816_p2;
reg   [76:0] r_V_10_5_i_reg_1568;
wire   [76:0] grp_fu_822_p2;
reg   [76:0] r_V_10_6_i_reg_1573;
wire   [0:0] tmp_10_2_i_fu_876_p2;
reg   [0:0] tmp_10_2_i_reg_1578;
wire   [0:0] sel_tmp6_demorgan_i_fu_914_p2;
reg   [0:0] sel_tmp6_demorgan_i_reg_1583;
wire   [0:0] sel_tmp14_i_fu_932_p2;
reg   [0:0] sel_tmp14_i_reg_1588;
wire   [0:0] sel_tmp34_i_fu_968_p2;
reg   [0:0] sel_tmp34_i_reg_1594;
wire   [0:0] or_cond_fu_974_p2;
reg   [0:0] or_cond_reg_1599;
wire   [1:0] newSel3_fu_998_p3;
reg   [1:0] newSel3_reg_1605;
reg   [2:0] level_buf_V_load_reg_1625;
reg   [2:0] level_buf_V_load_reg_1625_pp0_iter2_reg;
reg   [31:0] thresh_vec_load_reg_1635;
wire   [0:0] not_i_fu_1118_p2;
reg   [0:0] not_i_reg_1650;
reg   [0:0] not_i_reg_1650_pp0_iter3_reg;
wire   [75:0] grp_fu_1112_p2;
reg   [75:0] r_V_1_reg_1655;
wire   [43:0] tmp_s_fu_1163_p3;
reg   [43:0] tmp_s_reg_1660;
wire   [43:0] tmp_2_fu_1171_p3;
reg   [43:0] tmp_2_reg_1665;
wire   [31:0] tmp_data_1_fu_1226_p3;
wire   [63:0] tmp_i1_fu_292_p1;
wire   [63:0] tmp_1_i_fu_1063_p1;
wire   [63:0] tmp_2_i_fu_1084_p1;
wire   [63:0] tmp_3_i_fu_1101_p1;
wire   [10:0] tmp_13_i1_fu_302_p2;
wire   [9:0] tmp_4_i_fu_1068_p2;
wire   [9:0] tmp_8_i_fu_1089_p2;
wire  signed [15:0] p_Val2_5_fu_338_p1;
wire   [30:0] p_Val2_5_fu_338_p3;
wire  signed [31:0] p_z_M_imag_V_read_a_fu_346_p1;
wire  signed [31:0] p_y_M_imag_V_read_a_fu_364_p1;
wire   [30:0] p_r_M_real_V_1_fu_378_p3;
wire  signed [30:0] p_r_M_real_V_2_fu_388_p3;
wire  signed [30:0] grp_fu_407_p0;
wire  signed [30:0] grp_fu_407_p1;
wire  signed [31:0] grp_fu_422_p1;
wire  signed [30:0] grp_fu_428_p1;
wire  signed [31:0] grp_fu_434_p0;
wire  signed [30:0] p_y_M_real_V_read_a_fu_443_p3;
wire  signed [30:0] grp_fu_465_p1;
wire  signed [30:0] p_y_M_imag_V_read_a_1_fu_450_p3;
wire  signed [31:0] grp_fu_482_p1;
wire  signed [30:0] grp_fu_488_p1;
wire  signed [31:0] grp_fu_494_p0;
wire   [33:0] p_Val2_36_fu_503_p3;
wire   [33:0] p_Val2_38_fu_514_p3;
wire  signed [34:0] p_Val2_45_i_cast_fu_510_p1;
wire  signed [34:0] p_Val2_47_i_cast_fu_521_p1;
wire  signed [43:0] tmp_20_i_cast_fu_541_p1;
wire   [33:0] p_Val2_3_fu_556_p3;
wire   [33:0] p_Val2_4_fu_571_p3;
wire  signed [34:0] p_Val2_50_i_cast_fu_563_p1;
wire  signed [34:0] p_Val2_52_i_cast_fu_578_p1;
wire   [34:0] tmp_24_i_fu_582_p2;
wire  signed [43:0] tmp_24_i_cast_fu_588_p1;
wire   [33:0] tmp_9_fu_604_p3;
wire  signed [43:0] tmp_9_cast_fu_612_p1;
wire  signed [61:0] tmp_8_i_i_i_cast_fu_622_p1;
wire  signed [61:0] tmp_2_i_i_i_cast_fu_630_p1;
wire  signed [61:0] tmp_8_i_i1_i_cast_fu_638_p1;
wire  signed [61:0] tmp_2_i_i1_i_cast_fu_646_p1;
wire   [61:0] ret_V_2_fu_641_p2;
wire   [31:0] tmp_5_fu_654_p4;
wire   [33:0] p_Val2_28_fu_664_p3;
wire   [61:0] ret_V_3_fu_649_p2;
wire   [31:0] tmp_6_fu_676_p4;
wire   [33:0] p_Val2_26_fu_686_p3;
wire  signed [43:0] p_y_M_real_V_read_a_1_fu_672_p1;
wire  signed [43:0] p_y_M_imag_V_read_a_2_fu_694_p1;
wire   [61:0] ret_V_fu_625_p2;
wire   [31:0] tmp_7_fu_718_p4;
wire   [33:0] p_Val2_31_fu_728_p3;
wire   [61:0] ret_V_1_fu_633_p2;
wire   [31:0] tmp_8_fu_740_p4;
wire   [33:0] p_Val2_32_fu_750_p3;
wire   [43:0] p_Val2_30_fu_706_p2;
wire  signed [43:0] p_y_M_real_V_read_a_2_fu_736_p1;
wire   [43:0] p_Val2_33_fu_712_p2;
wire  signed [43:0] p_y_M_imag_V_read_a_3_fu_758_p1;
wire   [34:0] grp_fu_792_p0;
wire  signed [43:0] grp_fu_792_p1;
wire   [34:0] grp_fu_798_p0;
wire  signed [43:0] grp_fu_798_p1;
wire   [33:0] grp_fu_804_p0;
wire  signed [43:0] grp_fu_804_p1;
wire   [33:0] grp_fu_810_p0;
wire  signed [43:0] grp_fu_810_p1;
wire   [33:0] grp_fu_816_p0;
wire  signed [43:0] grp_fu_816_p1;
wire   [33:0] grp_fu_822_p0;
wire  signed [43:0] grp_fu_822_p1;
wire  signed [75:0] tmp_6_i_fu_844_p3;
wire  signed [77:0] tmp_7_i_cast_fu_855_p1;
wire  signed [76:0] tmp_7_i_cast1_fu_851_p1;
wire   [76:0] r_V_10_2_i_fu_869_p3;
wire   [0:0] tmp_9_i_fu_859_p2;
wire   [0:0] tmp_10_1_i_fu_864_p2;
wire   [0:0] sel_tmp1_i_fu_902_p2;
wire   [0:0] sel_tmp13_demorgan_i_fu_920_p2;
wire   [0:0] tmp_10_3_i_fu_882_p2;
wire   [0:0] sel_tmp13_i_fu_926_p2;
wire   [0:0] sel_tmp22_demorgan_i_fu_938_p2;
wire   [0:0] tmp_10_4_i_fu_887_p2;
wire   [0:0] sel_tmp22_i_fu_944_p2;
wire   [0:0] sel_tmp33_demorgan_i_fu_956_p2;
wire   [0:0] tmp_10_5_i_fu_892_p2;
wire   [0:0] sel_tmp33_i_fu_962_p2;
wire   [0:0] sel_tmp23_i_fu_950_p2;
wire   [0:0] sel_tmp2_i_fu_908_p2;
wire   [0:0] tmp_10_6_i_fu_897_p2;
wire   [0:0] or_cond2_fu_984_p2;
wire   [1:0] newSel22_cast_cast_fu_980_p1;
wire   [1:0] newSel1_fu_990_p3;
wire   [0:0] sel_tmp6_i_fu_1006_p2;
wire   [0:0] sel_tmp7_i_fu_1011_p2;
wire   [2:0] newSel_fu_1016_p3;
wire   [2:0] newSel20_cast_cast_fu_1023_p3;
wire   [0:0] or_cond1_fu_1030_p2;
wire   [0:0] or_cond3_fu_1042_p2;
wire   [2:0] newSel2_fu_1035_p3;
wire  signed [2:0] newSel28_cast_fu_1047_p1;
wire   [31:0] grp_fu_1112_p1;
wire   [43:0] sum_i_fu_1123_p2;
wire   [43:0] tmp_1_fu_1141_p2;
wire   [0:0] sel_tmp5_fu_1153_p2;
wire   [0:0] sel_tmp6_fu_1158_p2;
wire   [43:0] tmp_14_i_fu_1137_p2;
wire   [43:0] tmp_13_i_fu_1133_p2;
wire   [0:0] tmp_13_fu_1145_p3;
wire   [43:0] tmp_12_i_fu_1127_p2;
wire   [0:0] or_cond4_fu_1179_p2;
wire   [43:0] tmp_10_fu_1183_p3;
wire   [75:0] tmp_18_i_fu_1189_p3;
wire   [0:0] tmp_28_not_not_i_fu_1197_p2;
wire   [0:0] rev7_fu_1202_p2;
wire   [0:0] tmp_fu_1207_p2;
wire   [0:0] sel_tmp9_fu_1213_p2;
wire   [15:0] tmp_data_M_real_V_c_fu_1218_p3;
wire  signed [15:0] r_V_26_fu_1235_p0;
wire  signed [31:0] r_V_7_fu_374_p1;
wire  signed [15:0] r_V_26_fu_1235_p1;
wire  signed [15:0] grp_fu_1241_p0;
wire  signed [31:0] r_V_fu_440_p1;
wire  signed [15:0] grp_fu_1241_p1;
wire  signed [15:0] r_V_28_fu_1248_p0;
wire  signed [31:0] r_V_15_fu_385_p1;
wire  signed [15:0] r_V_28_fu_1248_p1;
wire  signed [15:0] grp_fu_1254_p0;
wire  signed [31:0] r_V_9_fu_500_p1;
wire  signed [15:0] grp_fu_1254_p1;
reg    grp_fu_407_ce;
reg    grp_fu_422_ce;
reg    grp_fu_428_ce;
reg    grp_fu_434_ce;
reg    grp_fu_465_ce;
reg    grp_fu_482_ce;
reg    grp_fu_488_ce;
reg    grp_fu_494_ce;
reg    grp_fu_792_ce;
reg    grp_fu_798_ce;
reg    grp_fu_804_ce;
reg    grp_fu_810_ce;
reg    grp_fu_816_ce;
reg    grp_fu_822_ce;
reg    grp_fu_1112_ce;
reg   [4:0] ap_NS_iter0_fsm;
reg   [5:0] ap_NS_iter1_fsm;
reg   [5:0] ap_NS_iter2_fsm;
reg   [5:0] ap_NS_iter3_fsm;
reg   [2:0] ap_NS_iter4_fsm;
wire   [75:0] grp_fu_1112_p10;

// power-on initialization
initial begin
#0 data_in_V_data_0_sel_rd = 1'b0;
#0 data_in_V_data_0_sel_wr = 1'b0;
#0 data_in_V_data_0_state = 2'd0;
#0 data_in_V_last_V_0_sel_rd = 1'b0;
#0 data_in_V_last_V_0_sel_wr = 1'b0;
#0 data_in_V_last_V_0_state = 2'd0;
#0 data_out_V_data_1_sel_rd = 1'b0;
#0 data_out_V_data_1_sel_wr = 1'b0;
#0 data_out_V_data_1_state = 2'd0;
#0 data_out_V_last_V_1_sel_rd = 1'b0;
#0 data_out_V_last_V_1_sel_wr = 1'b0;
#0 data_out_V_last_V_1_state = 2'd0;
#0 state_V = 1'd0;
#0 idxnw_V = 11'd0;
#0 AutoCorr_M_real_V = 44'd0;
#0 AutoCorr_M_imag_V = 44'd0;
#0 Energy_V = 44'd0;
#0 Energy_prev_V = 44'd0;
#0 idxnw_lev_V = 10'd0;
#0 idxnw_lev_use_V = 10'd1;
#0 ap_CS_iter0_fsm = 5'd1;
#0 ap_CS_iter1_fsm = 6'd1;
#0 ap_CS_iter2_fsm = 6'd1;
#0 ap_CS_iter3_fsm = 6'd1;
#0 ap_CS_iter4_fsm = 3'd1;
end

packet_det_prev_buffer_M_real_s #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
prev_buffer_M_real_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(prev_buffer_M_real_s_address0),
    .ce0(prev_buffer_M_real_s_ce0),
    .we0(prev_buffer_M_real_s_we0),
    .d0(buffer_M_real_V_q0),
    .q0(prev_buffer_M_real_s_q0)
);

packet_det_prev_buffer_M_real_s #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
prev_buffer_M_imag_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(prev_buffer_M_imag_s_address0),
    .ce0(prev_buffer_M_imag_s_ce0),
    .we0(prev_buffer_M_imag_s_we0),
    .d0(buffer_M_imag_V_q0),
    .q0(prev_buffer_M_imag_s_q0)
);

packet_det_prev_buffer_M_real_s #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
buffer_M_real_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_M_real_V_address0),
    .ce0(buffer_M_real_V_ce0),
    .we0(buffer_M_real_V_we0),
    .d0(buffer_M_real_V_d0),
    .q0(buffer_M_real_V_q0)
);

packet_det_prev_buffer_M_real_s #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
buffer_M_imag_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_M_imag_V_address0),
    .ce0(buffer_M_imag_V_ce0),
    .we0(buffer_M_imag_V_we0),
    .d0(buffer_M_imag_V_d0),
    .q0(buffer_M_imag_V_q0)
);

packet_det_ToSubE_vec_V #(
    .DataWidth( 32 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
ToSubE_vec_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ToSubE_vec_V_address0),
    .ce0(ToSubE_vec_V_ce0),
    .we0(ToSubE_vec_V_we0),
    .d0(ToAddE_V_reg_1426),
    .q0(ToSubE_vec_V_q0)
);

packet_det_ToSubE_vec_V #(
    .DataWidth( 32 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
ToSubE_prev_vec_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ToSubE_prev_vec_V_address0),
    .ce0(ToSubE_prev_vec_V_ce0),
    .we0(ToSubE_prev_vec_V_we0),
    .d0(ToAddE_prev_V_reg_1437),
    .q0(ToSubE_prev_vec_V_q0)
);

packet_det_level_buf_V #(
    .DataWidth( 3 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
level_buf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(level_buf_V_address0),
    .ce0(level_buf_V_ce0),
    .we0(level_buf_V_we0),
    .d0(level_buf_V_d0),
    .q0(level_buf_V_q0)
);

packet_det_thresh_vec #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
thresh_vec_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(thresh_vec_address0),
    .ce0(thresh_vec_ce0),
    .q0(thresh_vec_q0)
);

packet_det_mul_31s_31s_62_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 62 ))
packet_det_mul_31s_31s_62_3_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_407_p0),
    .din1(grp_fu_407_p1),
    .ce(grp_fu_407_ce),
    .dout(grp_fu_407_p2)
);

packet_det_mul_31s_32s_61_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
packet_det_mul_31s_32s_61_3_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_Val2_14_reg_1340),
    .din1(grp_fu_422_p1),
    .ce(grp_fu_422_ce),
    .dout(grp_fu_422_p2)
);

packet_det_mul_31s_31s_62_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 62 ))
packet_det_mul_31s_31s_62_3_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_Val2_14_reg_1340),
    .din1(grp_fu_428_p1),
    .ce(grp_fu_428_ce),
    .dout(grp_fu_428_p2)
);

packet_det_mul_32s_31s_61_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 61 ))
packet_det_mul_32s_31s_61_3_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_434_p0),
    .din1(p_r_M_real_V_2_fu_388_p3),
    .ce(grp_fu_434_ce),
    .dout(grp_fu_434_p2)
);

packet_det_mul_31s_31s_62_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 62 ))
packet_det_mul_31s_31s_62_3_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_y_M_real_V_read_a_fu_443_p3),
    .din1(grp_fu_465_p1),
    .ce(grp_fu_465_ce),
    .dout(grp_fu_465_p2)
);

packet_det_mul_31s_32s_61_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
packet_det_mul_31s_32s_61_3_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_y_M_imag_V_read_a_1_fu_450_p3),
    .din1(grp_fu_482_p1),
    .ce(grp_fu_482_ce),
    .dout(grp_fu_482_p2)
);

packet_det_mul_31s_31s_62_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 62 ))
packet_det_mul_31s_31s_62_3_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_y_M_imag_V_read_a_1_fu_450_p3),
    .din1(grp_fu_488_p1),
    .ce(grp_fu_488_ce),
    .dout(grp_fu_488_p2)
);

packet_det_mul_32s_31s_61_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 61 ))
packet_det_mul_32s_31s_61_3_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_494_p0),
    .din1(p_y_M_real_V_read_a_fu_443_p3),
    .ce(grp_fu_494_ce),
    .dout(grp_fu_494_p2)
);

packet_det_mul_35ns_44s_78_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 78 ))
packet_det_mul_35ns_44s_78_5_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_792_p0),
    .din1(grp_fu_792_p1),
    .ce(grp_fu_792_ce),
    .dout(grp_fu_792_p2)
);

packet_det_mul_35ns_44s_78_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 78 ))
packet_det_mul_35ns_44s_78_5_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_798_p0),
    .din1(grp_fu_798_p1),
    .ce(grp_fu_798_ce),
    .dout(grp_fu_798_p2)
);

packet_det_mul_34ns_44s_77_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 77 ))
packet_det_mul_34ns_44s_77_5_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_804_p0),
    .din1(grp_fu_804_p1),
    .ce(grp_fu_804_ce),
    .dout(grp_fu_804_p2)
);

packet_det_mul_34ns_44s_77_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 77 ))
packet_det_mul_34ns_44s_77_5_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_810_p0),
    .din1(grp_fu_810_p1),
    .ce(grp_fu_810_ce),
    .dout(grp_fu_810_p2)
);

packet_det_mul_34ns_44s_77_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 77 ))
packet_det_mul_34ns_44s_77_5_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_816_p0),
    .din1(grp_fu_816_p1),
    .ce(grp_fu_816_ce),
    .dout(grp_fu_816_p2)
);

packet_det_mul_34ns_44s_77_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 77 ))
packet_det_mul_34ns_44s_77_5_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_822_p0),
    .din1(grp_fu_822_p1),
    .ce(grp_fu_822_ce),
    .dout(grp_fu_822_p2)
);

packet_det_mul_44s_32ns_76_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 44 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 76 ))
packet_det_mul_44s_32ns_76_5_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_Val2_42_reg_1488_pp0_iter2_reg),
    .din1(grp_fu_1112_p1),
    .ce(grp_fu_1112_ce),
    .dout(grp_fu_1112_p2)
);

packet_det_mul_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
packet_det_mul_mul_16s_16s_32_1_1_U16(
    .din0(r_V_26_fu_1235_p0),
    .din1(r_V_26_fu_1235_p1),
    .dout(r_V_26_fu_1235_p2)
);

packet_det_mac_muladd_16s_16s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
packet_det_mac_muladd_16s_16s_32s_32_1_1_U17(
    .din0(grp_fu_1241_p0),
    .din1(grp_fu_1241_p1),
    .din2(r_V_26_reg_1361),
    .dout(grp_fu_1241_p3)
);

packet_det_mul_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
packet_det_mul_mul_16s_16s_32_1_1_U18(
    .din0(r_V_28_fu_1248_p0),
    .din1(r_V_28_fu_1248_p1),
    .dout(r_V_28_fu_1248_p2)
);

packet_det_mac_muladd_16s_16s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
packet_det_mac_muladd_16s_16s_32s_32_1_1_U19(
    .din0(grp_fu_1254_p0),
    .din1(grp_fu_1254_p1),
    .din2(r_V_28_reg_1432),
    .dout(grp_fu_1254_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter3_fsm <= ap_ST_iter3_fsm_state0;
    end else begin
        ap_CS_iter3_fsm <= ap_NS_iter3_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter4_fsm <= ap_ST_iter4_fsm_state0;
    end else begin
        ap_CS_iter4_fsm <= ap_NS_iter4_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_in_V_data_0_sel_rd <= 1'b0;
    end else begin
        if (((data_in_V_data_0_ack_out == 1'b1) & (data_in_V_data_0_vld_out == 1'b1))) begin
            data_in_V_data_0_sel_rd <= ~data_in_V_data_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_in_V_data_0_sel_wr <= 1'b0;
    end else begin
        if (((data_in_V_data_0_ack_in == 1'b1) & (data_in_V_data_0_vld_in == 1'b1))) begin
            data_in_V_data_0_sel_wr <= ~data_in_V_data_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_in_V_data_0_state <= 2'd0;
    end else begin
        if ((((data_in_V_data_0_vld_in == 1'b0) & (data_in_V_data_0_state == 2'd2)) | ((data_in_V_data_0_vld_in == 1'b0) & (data_in_V_data_0_ack_out == 1'b1) & (data_in_V_data_0_state == 2'd3)))) begin
            data_in_V_data_0_state <= 2'd2;
        end else if ((((data_in_V_data_0_ack_out == 1'b0) & (data_in_V_data_0_state == 2'd1)) | ((data_in_V_data_0_ack_out == 1'b0) & (data_in_V_data_0_vld_in == 1'b1) & (data_in_V_data_0_state == 2'd3)))) begin
            data_in_V_data_0_state <= 2'd1;
        end else if (((~((data_in_V_data_0_vld_in == 1'b0) & (data_in_V_data_0_ack_out == 1'b1)) & ~((data_in_V_data_0_ack_out == 1'b0) & (data_in_V_data_0_vld_in == 1'b1)) & (data_in_V_data_0_state == 2'd3)) | ((data_in_V_data_0_ack_out == 1'b1) & (data_in_V_data_0_state == 2'd1)) | ((data_in_V_data_0_vld_in == 1'b1) & (data_in_V_data_0_state == 2'd2)))) begin
            data_in_V_data_0_state <= 2'd3;
        end else begin
            data_in_V_data_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_in_V_last_V_0_sel_rd <= 1'b0;
    end else begin
        if (((data_in_V_last_V_0_ack_out == 1'b1) & (data_in_V_last_V_0_vld_out == 1'b1))) begin
            data_in_V_last_V_0_sel_rd <= ~data_in_V_last_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_in_V_last_V_0_sel_wr <= 1'b0;
    end else begin
        if (((data_in_V_last_V_0_ack_in == 1'b1) & (data_in_V_last_V_0_vld_in == 1'b1))) begin
            data_in_V_last_V_0_sel_wr <= ~data_in_V_last_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_in_V_last_V_0_state <= 2'd0;
    end else begin
        if ((((data_in_V_last_V_0_vld_in == 1'b0) & (data_in_V_last_V_0_state == 2'd2)) | ((data_in_V_last_V_0_vld_in == 1'b0) & (data_in_V_last_V_0_state == 2'd3) & (data_in_V_last_V_0_ack_out == 1'b1)))) begin
            data_in_V_last_V_0_state <= 2'd2;
        end else if ((((data_in_V_last_V_0_ack_out == 1'b0) & (data_in_V_last_V_0_state == 2'd1)) | ((data_in_V_last_V_0_ack_out == 1'b0) & (data_in_V_last_V_0_state == 2'd3) & (data_in_V_last_V_0_vld_in == 1'b1)))) begin
            data_in_V_last_V_0_state <= 2'd1;
        end else if (((~((data_in_V_last_V_0_vld_in == 1'b0) & (data_in_V_last_V_0_ack_out == 1'b1)) & ~((data_in_V_last_V_0_ack_out == 1'b0) & (data_in_V_last_V_0_vld_in == 1'b1)) & (data_in_V_last_V_0_state == 2'd3)) | ((data_in_V_last_V_0_state == 2'd1) & (data_in_V_last_V_0_ack_out == 1'b1)) | ((data_in_V_last_V_0_state == 2'd2) & (data_in_V_last_V_0_vld_in == 1'b1)))) begin
            data_in_V_last_V_0_state <= 2'd3;
        end else begin
            data_in_V_last_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_data_1_sel_rd <= 1'b0;
    end else begin
        if (((data_out_V_data_1_ack_out == 1'b1) & (data_out_V_data_1_vld_out == 1'b1))) begin
            data_out_V_data_1_sel_rd <= ~data_out_V_data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_data_1_sel_wr <= 1'b0;
    end else begin
        if (((data_out_V_data_1_ack_in == 1'b1) & (data_out_V_data_1_vld_in == 1'b1))) begin
            data_out_V_data_1_sel_wr <= ~data_out_V_data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_data_1_state <= 2'd0;
    end else begin
        if ((((data_out_V_data_1_vld_in == 1'b0) & (data_out_V_data_1_state == 2'd2)) | ((data_out_V_data_1_vld_in == 1'b0) & (data_out_V_data_1_state == 2'd3) & (data_out_V_data_1_ack_out == 1'b1)))) begin
            data_out_V_data_1_state <= 2'd2;
        end else if ((((data_out_V_data_1_ack_out == 1'b0) & (data_out_V_data_1_state == 2'd1)) | ((data_out_V_data_1_ack_out == 1'b0) & (data_out_V_data_1_state == 2'd3) & (data_out_V_data_1_vld_in == 1'b1)))) begin
            data_out_V_data_1_state <= 2'd1;
        end else if (((~((data_out_V_data_1_vld_in == 1'b0) & (data_out_V_data_1_ack_out == 1'b1)) & ~((data_out_V_data_1_ack_out == 1'b0) & (data_out_V_data_1_vld_in == 1'b1)) & (data_out_V_data_1_state == 2'd3)) | ((data_out_V_data_1_state == 2'd1) & (data_out_V_data_1_ack_out == 1'b1)) | ((data_out_V_data_1_state == 2'd2) & (data_out_V_data_1_vld_in == 1'b1)))) begin
            data_out_V_data_1_state <= 2'd3;
        end else begin
            data_out_V_data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((data_out_V_last_V_1_ack_out == 1'b1) & (data_out_V_last_V_1_vld_out == 1'b1))) begin
            data_out_V_last_V_1_sel_rd <= ~data_out_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((data_out_V_last_V_1_ack_in == 1'b1) & (data_out_V_last_V_1_vld_in == 1'b1))) begin
            data_out_V_last_V_1_sel_wr <= ~data_out_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((data_out_V_last_V_1_vld_in == 1'b0) & (data_out_V_last_V_1_state == 2'd2)) | ((data_out_V_last_V_1_vld_in == 1'b0) & (data_out_V_last_V_1_state == 2'd3) & (data_out_V_last_V_1_ack_out == 1'b1)))) begin
            data_out_V_last_V_1_state <= 2'd2;
        end else if ((((data_out_V_last_V_1_ack_out == 1'b0) & (data_out_V_last_V_1_state == 2'd1)) | ((data_out_V_last_V_1_ack_out == 1'b0) & (data_out_V_last_V_1_state == 2'd3) & (data_out_V_last_V_1_vld_in == 1'b1)))) begin
            data_out_V_last_V_1_state <= 2'd1;
        end else if (((~((data_out_V_last_V_1_vld_in == 1'b0) & (data_out_V_last_V_1_ack_out == 1'b1)) & ~((data_out_V_last_V_1_ack_out == 1'b0) & (data_out_V_last_V_1_vld_in == 1'b1)) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_V_last_V_1_state == 2'd1) & (data_out_V_last_V_1_ack_out == 1'b1)) | ((data_out_V_last_V_1_state == 2'd2) & (data_out_V_last_V_1_vld_in == 1'b1)))) begin
            data_out_V_last_V_1_state <= 2'd3;
        end else begin
            data_out_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261_pp0_iter0_reg == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state6))) begin
        AutoCorr_M_imag_V <= p_Val2_34_fu_768_p2;
        AutoCorr_M_real_V <= p_Val2_46_fu_762_p2;
        p_Val2_34_reg_1514 <= p_Val2_34_fu_768_p2;
        p_Val2_46_reg_1506 <= p_Val2_46_fu_762_p2;
        tmp_3_reg_1536 <= p_Val2_46_fu_762_p2[32'd43];
        tmp_4_reg_1542 <= p_Val2_34_fu_768_p2[32'd43];
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
        Energy_V <= p_Val2_42_fu_544_p2;
        Energy_prev_V <= tmp_25_i_fu_592_p2;
        p_Val2_42_reg_1488 <= p_Val2_42_fu_544_p2;
        r_V_17_reg_1448 <= grp_fu_407_p2;
        r_V_18_reg_1453 <= grp_fu_422_p2;
        r_V_19_reg_1458 <= grp_fu_428_p2;
        r_V_20_reg_1463 <= grp_fu_434_p2;
        r_V_21_reg_1468 <= grp_fu_465_p2;
        r_V_22_reg_1473 <= grp_fu_482_p2;
        r_V_23_reg_1478 <= grp_fu_488_p2;
        r_V_24_reg_1483 <= grp_fu_494_p2;
        slt_reg_1501 <= slt_fu_616_p2;
        tmp_25_i_reg_1494 <= tmp_25_i_fu_592_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        ToAddE_V_reg_1426 <= grp_fu_1241_p3;
        r_V_28_reg_1432 <= r_V_28_fu_1248_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        ToAddE_prev_V_reg_1437 <= grp_fu_1254_p3;
        tmp_20_i_reg_1443[34 : 2] <= tmp_20_i_fu_525_p2[34 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((~(((data_in_V_data_0_vld_out == 1'b0) & (state_V_load_reg_1261 == 1'd1)) | ((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        ToSubE_V_reg_1346 <= ToSubE_vec_V_q0;
        ToSubE_prev_V_reg_1351 <= ToSubE_prev_vec_V_q0;
        p_Val2_14_reg_1340[30 : 15] <= p_Val2_14_fu_356_p3[30 : 15];
        p_Val2_15_reg_1300 <= p_Val2_15_fu_322_p1;
        p_Val2_1_reg_1319 <= prev_buffer_M_imag_s_q0;
        p_Val2_2_reg_1307 <= {{data_in_V_data_0_data_out[31:16]}};
        p_Val2_6_reg_1329 <= buffer_M_real_V_q0;
        p_Val2_s_reg_1313 <= prev_buffer_M_real_s_q0;
        p_r_M_imag_V_1_reg_1324[31 : 15] <= p_r_M_imag_V_1_fu_350_p2[31 : 15];
        p_r_M_imag_V_2_reg_1356[31 : 15] <= p_r_M_imag_V_2_fu_368_p2[31 : 15];
        r_V_26_reg_1361 <= r_V_26_fu_1235_p2;
        tmp_last_V_reg_1295 <= data_in_V_last_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_load_fu_284_p1 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ToSubE_prev_vec_V_ad_reg_1290 <= tmp_i1_fu_292_p1;
        ToSubE_vec_V_addr_reg_1285 <= tmp_i1_fu_292_p1;
        buffer_M_imag_V_add_reg_1280 <= tmp_i1_fu_292_p1;
        buffer_M_real_V_add_reg_1275 <= tmp_i1_fu_292_p1;
        idxnw_V <= tmp_13_i1_fu_302_p2;
        prev_buffer_M_imag_1_reg_1270 <= tmp_i1_fu_292_p1;
        prev_buffer_M_real_1_reg_1265 <= tmp_i1_fu_292_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((data_in_V_data_0_load_A == 1'b1)) begin
        data_in_V_data_0_payload_A <= data_in_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((data_in_V_data_0_load_B == 1'b1)) begin
        data_in_V_data_0_payload_B <= data_in_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((data_in_V_last_V_0_load_A == 1'b1)) begin
        data_in_V_last_V_0_payload_A <= data_in_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((data_in_V_last_V_0_load_B == 1'b1)) begin
        data_in_V_last_V_0_payload_B <= data_in_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_data_1_load_A == 1'b1)) begin
        data_out_V_data_1_payload_A <= tmp_data_1_fu_1226_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_data_1_load_B == 1'b1)) begin
        data_out_V_data_1_payload_B <= tmp_data_1_fu_1226_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_last_V_1_load_A == 1'b1)) begin
        data_out_V_last_V_1_payload_A <= tmp_last_V_reg_1295_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_last_V_1_load_B == 1'b1)) begin
        data_out_V_last_V_1_payload_B <= tmp_last_V_reg_1295_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_iter2_fsm_state12))) begin
        idxnw_lev_V <= tmp_4_i_fu_1068_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_iter2_fsm_state13))) begin
        idxnw_lev_use_V <= tmp_8_i_fu_1089_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_iter2_fsm_state14))) begin
        level_buf_V_load_reg_1625 <= level_buf_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter2_fsm_state15))) begin
        level_buf_V_load_reg_1625_pp0_iter2_reg <= level_buf_V_load_reg_1625;
        p_Val2_34_reg_1514_pp0_iter2_reg <= p_Val2_34_reg_1514_pp0_iter1_reg;
        p_Val2_42_reg_1488_pp0_iter2_reg <= p_Val2_42_reg_1488_pp0_iter1_reg;
        p_Val2_46_reg_1506_pp0_iter2_reg <= p_Val2_46_reg_1506_pp0_iter1_reg;
        slt_reg_1501_pp0_iter2_reg <= slt_reg_1501_pp0_iter1_reg;
        state_V_load_reg_1261_pp0_iter2_reg <= state_V_load_reg_1261_pp0_iter1_reg;
        tmp_3_reg_1536_pp0_iter2_reg <= tmp_3_reg_1536_pp0_iter1_reg;
        tmp_4_reg_1542_pp0_iter2_reg <= tmp_4_reg_1542_pp0_iter1_reg;
        tmp_last_V_reg_1295_pp0_iter2_reg <= tmp_last_V_reg_1295_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_iter2_fsm_state11))) begin
        newSel3_reg_1605 <= newSel3_fu_998_p3;
        or_cond_reg_1599 <= or_cond_fu_974_p2;
        sel_tmp14_i_reg_1588 <= sel_tmp14_i_fu_932_p2;
        sel_tmp34_i_reg_1594 <= sel_tmp34_i_fu_968_p2;
        sel_tmp6_demorgan_i_reg_1583 <= sel_tmp6_demorgan_i_fu_914_p2;
        tmp_10_2_i_reg_1578 <= tmp_10_2_i_fu_876_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_iter3_fsm_state17))) begin
        not_i_reg_1650 <= not_i_fu_1118_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter3_fsm_state20))) begin
        not_i_reg_1650_pp0_iter3_reg <= not_i_reg_1650;
        slt_reg_1501_pp0_iter3_reg <= slt_reg_1501_pp0_iter2_reg;
        state_V_load_reg_1261_pp0_iter3_reg <= state_V_load_reg_1261_pp0_iter2_reg;
        tmp_3_reg_1536_pp0_iter3_reg <= tmp_3_reg_1536_pp0_iter2_reg;
        tmp_4_reg_1542_pp0_iter3_reg <= tmp_4_reg_1542_pp0_iter2_reg;
        tmp_last_V_reg_1295_pp0_iter3_reg <= tmp_last_V_reg_1295_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state10))) begin
        p_Val2_34_reg_1514_pp0_iter1_reg <= p_Val2_34_reg_1514;
        p_Val2_42_reg_1488_pp0_iter1_reg <= p_Val2_42_reg_1488;
        p_Val2_46_reg_1506_pp0_iter1_reg <= p_Val2_46_reg_1506;
        slt_reg_1501_pp0_iter1_reg <= slt_reg_1501;
        state_V_load_reg_1261_pp0_iter1_reg <= state_V_load_reg_1261_pp0_iter0_reg;
        tmp_25_i_reg_1494_pp0_iter1_reg <= tmp_25_i_reg_1494;
        tmp_3_reg_1536_pp0_iter1_reg <= tmp_3_reg_1536;
        tmp_4_reg_1542_pp0_iter1_reg <= tmp_4_reg_1542;
        tmp_last_V_reg_1295_pp0_iter1_reg <= tmp_last_V_reg_1295_pp0_iter0_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261_pp0_iter0_reg == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state10))) begin
        r_V_10_1_i_reg_1553 <= grp_fu_798_p2;
        r_V_10_3_i_reg_1558 <= grp_fu_804_p2;
        r_V_10_4_i_reg_1563 <= grp_fu_810_p2;
        r_V_10_5_i_reg_1568 <= grp_fu_816_p2;
        r_V_10_6_i_reg_1573 <= grp_fu_822_p2;
        r_V_i_reg_1548 <= grp_fu_792_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_iter3_fsm_state20))) begin
        r_V_1_reg_1655 <= grp_fu_1112_p2;
        tmp_2_reg_1665 <= tmp_2_fu_1171_p3;
        tmp_s_reg_1660 <= tmp_s_fu_1163_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state5) & (state_V_load_reg_1261 == 1'd0))) begin
        state_V <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        state_V_load_reg_1261 <= state_V;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
        state_V_load_reg_1261_pp0_iter0_reg <= state_V_load_reg_1261;
        tmp_last_V_reg_1295_pp0_iter0_reg <= tmp_last_V_reg_1295;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_iter2_fsm_state15))) begin
        thresh_vec_load_reg_1635 <= thresh_vec_q0;
    end
end

always @ (*) begin
    if (((state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
        ToSubE_prev_vec_V_address0 = ToSubE_prev_vec_V_ad_reg_1290;
    end else if (((state_V_load_load_fu_284_p1 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ToSubE_prev_vec_V_address0 = tmp_i1_fu_292_p1;
    end else begin
        ToSubE_prev_vec_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_load_fu_284_p1 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state6)))) begin
        ToSubE_prev_vec_V_ce0 = 1'b1;
    end else begin
        ToSubE_prev_vec_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
        ToSubE_prev_vec_V_we0 = 1'b1;
    end else begin
        ToSubE_prev_vec_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        ToSubE_vec_V_address0 = ToSubE_vec_V_addr_reg_1285;
    end else if (((state_V_load_load_fu_284_p1 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ToSubE_vec_V_address0 = tmp_i1_fu_292_p1;
    end else begin
        ToSubE_vec_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_load_fu_284_p1 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4)))) begin
        ToSubE_vec_V_ce0 = 1'b1;
    end else begin
        ToSubE_vec_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        ToSubE_vec_V_we0 = 1'b1;
    end else begin
        ToSubE_vec_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        buffer_M_imag_V_address0 = buffer_M_imag_V_add_reg_1280;
    end else if (((state_V_load_load_fu_284_p1 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        buffer_M_imag_V_address0 = tmp_i1_fu_292_p1;
    end else begin
        buffer_M_imag_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_load_fu_284_p1 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~(((data_in_V_data_0_vld_out == 1'b0) & (state_V_load_reg_1261 == 1'd1)) | ((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        buffer_M_imag_V_ce0 = 1'b1;
    end else begin
        buffer_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((data_in_V_data_0_vld_out == 1'b0) & (state_V_load_reg_1261 == 1'd1)) | ((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        buffer_M_imag_V_we0 = 1'b1;
    end else begin
        buffer_M_imag_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        buffer_M_real_V_address0 = buffer_M_real_V_add_reg_1275;
    end else if (((state_V_load_load_fu_284_p1 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        buffer_M_real_V_address0 = tmp_i1_fu_292_p1;
    end else begin
        buffer_M_real_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_load_fu_284_p1 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~(((data_in_V_data_0_vld_out == 1'b0) & (state_V_load_reg_1261 == 1'd1)) | ((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        buffer_M_real_V_ce0 = 1'b1;
    end else begin
        buffer_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((data_in_V_data_0_vld_out == 1'b0) & (state_V_load_reg_1261 == 1'd1)) | ((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        buffer_M_real_V_we0 = 1'b1;
    end else begin
        buffer_M_real_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        data_in_TDATA_blk_n = data_in_V_data_0_state[1'd0];
    end else begin
        data_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((data_in_V_data_0_vld_out == 1'b0) & (state_V_load_reg_1261 == 1'd1)) | ((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        data_in_V_data_0_ack_out = 1'b1;
    end else begin
        data_in_V_data_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((data_in_V_data_0_sel == 1'b1)) begin
        data_in_V_data_0_data_out = data_in_V_data_0_payload_B;
    end else begin
        data_in_V_data_0_data_out = data_in_V_data_0_payload_A;
    end
end

always @ (*) begin
    if ((~(((data_in_V_data_0_vld_out == 1'b0) & (state_V_load_reg_1261 == 1'd1)) | ((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        data_in_V_last_V_0_ack_out = 1'b1;
    end else begin
        data_in_V_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((data_in_V_last_V_0_sel == 1'b1)) begin
        data_in_V_last_V_0_data_out = data_in_V_last_V_0_payload_B;
    end else begin
        data_in_V_last_V_0_data_out = data_in_V_last_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((state_V_load_reg_1261_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_iter4_fsm_state22)) | ((state_V_load_reg_1261_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_iter4_fsm_state21)))) begin
        data_out_TDATA_blk_n = data_out_V_data_1_state[1'd1];
    end else begin
        data_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((data_out_V_data_1_sel == 1'b1)) begin
        data_out_V_data_1_data_out = data_out_V_data_1_payload_B;
    end else begin
        data_out_V_data_1_data_out = data_out_V_data_1_payload_A;
    end
end

always @ (*) begin
    if (((state_V_load_reg_1261_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_iter4_fsm_state21) & (1'b0 == ap_block_state21_io))) begin
        data_out_V_data_1_vld_in = 1'b1;
    end else begin
        data_out_V_data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((data_out_V_last_V_1_sel == 1'b1)) begin
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_B;
    end else begin
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((state_V_load_reg_1261_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_iter4_fsm_state21) & (1'b0 == ap_block_state21_io))) begin
        data_out_V_last_V_1_vld_in = 1'b1;
    end else begin
        data_out_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter3_fsm_state20)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter3_fsm_state19)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter3_fsm_state18)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter3_fsm_state17)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter3_fsm_state16)))) begin
        grp_fu_1112_ce = 1'b1;
    end else begin
        grp_fu_1112_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state5)))) begin
        grp_fu_407_ce = 1'b1;
    end else begin
        grp_fu_407_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state5)))) begin
        grp_fu_422_ce = 1'b1;
    end else begin
        grp_fu_422_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state5)))) begin
        grp_fu_428_ce = 1'b1;
    end else begin
        grp_fu_428_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state5)))) begin
        grp_fu_434_ce = 1'b1;
    end else begin
        grp_fu_434_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state5)))) begin
        grp_fu_465_ce = 1'b1;
    end else begin
        grp_fu_465_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state5)))) begin
        grp_fu_482_ce = 1'b1;
    end else begin
        grp_fu_482_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state5)))) begin
        grp_fu_488_ce = 1'b1;
    end else begin
        grp_fu_488_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state5)))) begin
        grp_fu_494_ce = 1'b1;
    end else begin
        grp_fu_494_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state10)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state9)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state8)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state7)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state6)))) begin
        grp_fu_792_ce = 1'b1;
    end else begin
        grp_fu_792_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state10)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state9)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state8)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state7)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state6)))) begin
        grp_fu_798_ce = 1'b1;
    end else begin
        grp_fu_798_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state10)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state9)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state8)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state7)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state6)))) begin
        grp_fu_804_ce = 1'b1;
    end else begin
        grp_fu_804_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state10)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state9)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state8)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state7)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state6)))) begin
        grp_fu_810_ce = 1'b1;
    end else begin
        grp_fu_810_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state10)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state9)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state8)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state7)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state6)))) begin
        grp_fu_816_ce = 1'b1;
    end else begin
        grp_fu_816_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state10)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state9)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state8)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state7)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state6)))) begin
        grp_fu_822_ce = 1'b1;
    end else begin
        grp_fu_822_ce = 1'b0;
    end
end

always @ (*) begin
    if ((state_V_load_reg_1261_pp0_iter1_reg == 1'd1)) begin
        if ((1'b1 == ap_CS_iter2_fsm_state13)) begin
            level_buf_V_address0 = tmp_2_i_fu_1084_p1;
        end else if ((1'b1 == ap_CS_iter2_fsm_state12)) begin
            level_buf_V_address0 = tmp_1_i_fu_1063_p1;
        end else begin
            level_buf_V_address0 = 'bx;
        end
    end else begin
        level_buf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_iter2_fsm_state13)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter2_fsm_state13)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_iter2_fsm_state12)))) begin
        level_buf_V_ce0 = 1'b1;
    end else begin
        level_buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_iter2_fsm_state12))) begin
        level_buf_V_we0 = 1'b1;
    end else begin
        level_buf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        prev_buffer_M_imag_s_address0 = prev_buffer_M_imag_1_reg_1270;
    end else if (((state_V_load_load_fu_284_p1 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        prev_buffer_M_imag_s_address0 = tmp_i1_fu_292_p1;
    end else begin
        prev_buffer_M_imag_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_load_fu_284_p1 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~(((data_in_V_data_0_vld_out == 1'b0) & (state_V_load_reg_1261 == 1'd1)) | ((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        prev_buffer_M_imag_s_ce0 = 1'b1;
    end else begin
        prev_buffer_M_imag_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((data_in_V_data_0_vld_out == 1'b0) & (state_V_load_reg_1261 == 1'd1)) | ((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        prev_buffer_M_imag_s_we0 = 1'b1;
    end else begin
        prev_buffer_M_imag_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        prev_buffer_M_real_s_address0 = prev_buffer_M_real_1_reg_1265;
    end else if (((state_V_load_load_fu_284_p1 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        prev_buffer_M_real_s_address0 = tmp_i1_fu_292_p1;
    end else begin
        prev_buffer_M_real_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_load_fu_284_p1 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~(((data_in_V_data_0_vld_out == 1'b0) & (state_V_load_reg_1261 == 1'd1)) | ((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        prev_buffer_M_real_s_ce0 = 1'b1;
    end else begin
        prev_buffer_M_real_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((data_in_V_data_0_vld_out == 1'b0) & (state_V_load_reg_1261 == 1'd1)) | ((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (state_V_load_reg_1261 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        prev_buffer_M_real_s_we0 = 1'b1;
    end else begin
        prev_buffer_M_real_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter2_fsm_state14))) begin
        thresh_vec_ce0 = 1'b1;
    end else begin
        thresh_vec_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end
        end
        ap_ST_iter0_fsm_state2 : begin
            if ((~(((data_in_V_data_0_vld_out == 1'b0) & (state_V_load_reg_1261 == 1'd1)) | ((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end
        end
        ap_ST_iter0_fsm_state3 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end
        end
        ap_ST_iter0_fsm_state4 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end
        end
        ap_ST_iter0_fsm_state5 : begin
            if (~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io)))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state6 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state6))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state7;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state6;
            end
        end
        ap_ST_iter1_fsm_state7 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state7))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state8;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state7;
            end
        end
        ap_ST_iter1_fsm_state8 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state8))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state9;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state8;
            end
        end
        ap_ST_iter1_fsm_state9 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state9))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state10;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state9;
            end
        end
        ap_ST_iter1_fsm_state10 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state6;
            end else if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b0 == ap_CS_iter0_fsm_state5))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state10;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state6;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state11 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter2_fsm_state11))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state12;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state11;
            end
        end
        ap_ST_iter2_fsm_state12 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter2_fsm_state12))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state13;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state12;
            end
        end
        ap_ST_iter2_fsm_state13 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter2_fsm_state13))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state14;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state13;
            end
        end
        ap_ST_iter2_fsm_state14 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter2_fsm_state14))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state15;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state14;
            end
        end
        ap_ST_iter2_fsm_state15 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state10))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state11;
            end else if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b0 == ap_CS_iter1_fsm_state10))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state15;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter1_fsm_state10))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state11;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter3_fsm)
        ap_ST_iter3_fsm_state16 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter3_fsm_state16))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state17;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state16;
            end
        end
        ap_ST_iter3_fsm_state17 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter3_fsm_state17))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state18;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state17;
            end
        end
        ap_ST_iter3_fsm_state18 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter3_fsm_state18))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state19;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state18;
            end
        end
        ap_ST_iter3_fsm_state19 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter3_fsm_state19))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state20;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state19;
            end
        end
        ap_ST_iter3_fsm_state20 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter2_fsm_state15))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state16;
            end else if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b0 == ap_CS_iter2_fsm_state15))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state20;
            end
        end
        ap_ST_iter3_fsm_state0 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter2_fsm_state15))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state16;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter3_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter4_fsm)
        ap_ST_iter4_fsm_state21 : begin
            if (((1'b1 == ap_CS_iter4_fsm_state21) & (1'b0 == ap_block_state21_io))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state22;
            end else begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state21;
            end
        end
        ap_ST_iter4_fsm_state22 : begin
            if ((~((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io)) & (1'b1 == ap_CS_iter3_fsm_state20))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state21;
            end else if ((~((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io)) & (1'b0 == ap_CS_iter3_fsm_state20))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state0;
            end else begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state22;
            end
        end
        ap_ST_iter4_fsm_state0 : begin
            if ((~(((1'b1 == ap_CS_iter4_fsm_state22) & ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0) | (1'b1 == ap_block_state22_io))) | ((1'b1 == ap_CS_iter4_fsm_state21) & (1'b1 == ap_block_state21_io))) & (1'b1 == ap_CS_iter3_fsm_state20))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state21;
            end else begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter4_fsm = 'bx;
        end
    endcase
end

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter0_fsm_state2 = ap_CS_iter0_fsm[32'd1];

assign ap_CS_iter0_fsm_state3 = ap_CS_iter0_fsm[32'd2];

assign ap_CS_iter0_fsm_state4 = ap_CS_iter0_fsm[32'd3];

assign ap_CS_iter0_fsm_state5 = ap_CS_iter0_fsm[32'd4];

assign ap_CS_iter1_fsm_state10 = ap_CS_iter1_fsm[32'd5];

assign ap_CS_iter1_fsm_state6 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter1_fsm_state7 = ap_CS_iter1_fsm[32'd2];

assign ap_CS_iter1_fsm_state8 = ap_CS_iter1_fsm[32'd3];

assign ap_CS_iter1_fsm_state9 = ap_CS_iter1_fsm[32'd4];

assign ap_CS_iter2_fsm_state11 = ap_CS_iter2_fsm[32'd1];

assign ap_CS_iter2_fsm_state12 = ap_CS_iter2_fsm[32'd2];

assign ap_CS_iter2_fsm_state13 = ap_CS_iter2_fsm[32'd3];

assign ap_CS_iter2_fsm_state14 = ap_CS_iter2_fsm[32'd4];

assign ap_CS_iter2_fsm_state15 = ap_CS_iter2_fsm[32'd5];

assign ap_CS_iter3_fsm_state16 = ap_CS_iter3_fsm[32'd1];

assign ap_CS_iter3_fsm_state17 = ap_CS_iter3_fsm[32'd2];

assign ap_CS_iter3_fsm_state18 = ap_CS_iter3_fsm[32'd3];

assign ap_CS_iter3_fsm_state19 = ap_CS_iter3_fsm[32'd4];

assign ap_CS_iter3_fsm_state20 = ap_CS_iter3_fsm[32'd5];

assign ap_CS_iter4_fsm_state21 = ap_CS_iter4_fsm[32'd1];

assign ap_CS_iter4_fsm_state22 = ap_CS_iter4_fsm[32'd2];

assign ap_block_state10_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_io = ((data_out_V_data_1_ack_in == 1'b0) & (state_V_load_reg_1261_pp0_iter3_reg == 1'd1));
end

assign ap_block_state21_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_io = ((data_out_V_data_1_ack_in == 1'b0) & (state_V_load_reg_1261_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_block_state22_pp0_stage1_iter4 = ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((data_in_V_data_0_vld_out == 1'b0) & (state_V_load_reg_1261 == 1'd1));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign buffer_M_imag_V_d0 = {{data_in_V_data_0_data_out[31:16]}};

assign buffer_M_real_V_d0 = data_in_V_data_0_data_out[15:0];

assign data_in_TREADY = data_in_V_last_V_0_state[1'd1];

assign data_in_V_data_0_ack_in = data_in_V_data_0_state[1'd1];

assign data_in_V_data_0_load_A = (~data_in_V_data_0_sel_wr & data_in_V_data_0_state_cmp_full);

assign data_in_V_data_0_load_B = (data_in_V_data_0_state_cmp_full & data_in_V_data_0_sel_wr);

assign data_in_V_data_0_sel = data_in_V_data_0_sel_rd;

assign data_in_V_data_0_state_cmp_full = ((data_in_V_data_0_state != 2'd1) ? 1'b1 : 1'b0);

assign data_in_V_data_0_vld_in = data_in_TVALID;

assign data_in_V_data_0_vld_out = data_in_V_data_0_state[1'd0];

assign data_in_V_last_V_0_ack_in = data_in_V_last_V_0_state[1'd1];

assign data_in_V_last_V_0_load_A = (~data_in_V_last_V_0_sel_wr & data_in_V_last_V_0_state_cmp_full);

assign data_in_V_last_V_0_load_B = (data_in_V_last_V_0_state_cmp_full & data_in_V_last_V_0_sel_wr);

assign data_in_V_last_V_0_sel = data_in_V_last_V_0_sel_rd;

assign data_in_V_last_V_0_state_cmp_full = ((data_in_V_last_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign data_in_V_last_V_0_vld_in = data_in_TVALID;

assign data_in_V_last_V_0_vld_out = data_in_V_last_V_0_state[1'd0];

assign data_out_TDATA = data_out_V_data_1_data_out;

assign data_out_TLAST = data_out_V_last_V_1_data_out;

assign data_out_TVALID = data_out_V_last_V_1_state[1'd0];

assign data_out_V_data_1_ack_in = data_out_V_data_1_state[1'd1];

assign data_out_V_data_1_ack_out = data_out_TREADY;

assign data_out_V_data_1_load_A = (~data_out_V_data_1_sel_wr & data_out_V_data_1_state_cmp_full);

assign data_out_V_data_1_load_B = (data_out_V_data_1_state_cmp_full & data_out_V_data_1_sel_wr);

assign data_out_V_data_1_sel = data_out_V_data_1_sel_rd;

assign data_out_V_data_1_state_cmp_full = ((data_out_V_data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign data_out_V_data_1_vld_out = data_out_V_data_1_state[1'd0];

assign data_out_V_last_V_1_ack_in = data_out_V_last_V_1_state[1'd1];

assign data_out_V_last_V_1_ack_out = data_out_TREADY;

assign data_out_V_last_V_1_load_A = (~data_out_V_last_V_1_sel_wr & data_out_V_last_V_1_state_cmp_full);

assign data_out_V_last_V_1_load_B = (data_out_V_last_V_1_state_cmp_full & data_out_V_last_V_1_sel_wr);

assign data_out_V_last_V_1_sel = data_out_V_last_V_1_sel_rd;

assign data_out_V_last_V_1_state_cmp_full = ((data_out_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign data_out_V_last_V_1_vld_out = data_out_V_last_V_1_state[1'd0];

assign grp_fu_1112_p1 = grp_fu_1112_p10;

assign grp_fu_1112_p10 = thresh_vec_load_reg_1635;

assign grp_fu_1241_p0 = r_V_fu_440_p1;

assign grp_fu_1241_p1 = r_V_fu_440_p1;

assign grp_fu_1254_p0 = r_V_9_fu_500_p1;

assign grp_fu_1254_p1 = r_V_9_fu_500_p1;

assign grp_fu_407_p0 = r_V_8_i_cast_fu_403_p1;

assign grp_fu_407_p1 = r_V_2_i_cast_fu_395_p1;

assign grp_fu_422_p1 = r_V_4_i_cast_fu_413_p1;

assign grp_fu_428_p1 = r_V_2_i_cast_fu_395_p1;

assign grp_fu_434_p0 = r_V_4_i_cast_fu_413_p1;

assign grp_fu_465_p1 = r_V_8_i_cast_fu_403_p1;

assign grp_fu_482_p1 = r_V_10_i_cast_fu_471_p1;

assign grp_fu_488_p1 = r_V_8_i_cast_fu_403_p1;

assign grp_fu_494_p0 = r_V_10_i_cast_fu_471_p1;

assign grp_fu_792_p0 = 78'd10737418240;

assign grp_fu_792_p1 = tmp_i19_cast1_fu_786_p1;

assign grp_fu_798_p0 = 78'd9448928051;

assign grp_fu_798_p1 = tmp_i19_cast1_fu_786_p1;

assign grp_fu_804_p0 = 77'd7430293422;

assign grp_fu_804_p1 = tmp_i19_cast_fu_789_p1;

assign grp_fu_810_p0 = 77'd6871947673;

assign grp_fu_810_p1 = tmp_i19_cast_fu_789_p1;

assign grp_fu_816_p0 = 77'd6442450944;

assign grp_fu_816_p1 = tmp_i19_cast_fu_789_p1;

assign grp_fu_822_p0 = 77'd5755256176;

assign grp_fu_822_p1 = tmp_i19_cast_fu_789_p1;

assign level_buf_V_d0 = ((or_cond3_fu_1042_p2[0:0] === 1'b1) ? newSel2_fu_1035_p3 : newSel28_cast_fu_1047_p1);

assign newSel1_fu_990_p3 = ((tmp_10_6_i_fu_897_p2[0:0] === 1'b1) ? 2'd2 : 2'd3);

assign newSel20_cast_cast_fu_1023_p3 = ((sel_tmp14_i_reg_1588[0:0] === 1'b1) ? 3'd3 : 3'd2);

assign newSel22_cast_cast_fu_980_p1 = sel_tmp2_i_fu_908_p2;

assign newSel28_cast_fu_1047_p1 = $signed(newSel3_reg_1605);

assign newSel2_fu_1035_p3 = ((or_cond_reg_1599[0:0] === 1'b1) ? newSel_fu_1016_p3 : newSel20_cast_cast_fu_1023_p3);

assign newSel3_fu_998_p3 = ((or_cond2_fu_984_p2[0:0] === 1'b1) ? newSel22_cast_cast_fu_980_p1 : newSel1_fu_990_p3);

assign newSel_fu_1016_p3 = ((sel_tmp34_i_reg_1594[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign not_i_fu_1118_p2 = ((level_buf_V_load_reg_1625_pp0_iter2_reg != 3'd7) ? 1'b1 : 1'b0);

assign or_cond1_fu_1030_p2 = (sel_tmp7_i_fu_1011_p2 | sel_tmp14_i_reg_1588);

assign or_cond2_fu_984_p2 = (tmp_9_i_fu_859_p2 | sel_tmp2_i_fu_908_p2);

assign or_cond3_fu_1042_p2 = (or_cond_reg_1599 | or_cond1_fu_1030_p2);

assign or_cond4_fu_1179_p2 = (tmp_4_reg_1542_pp0_iter3_reg ^ tmp_3_reg_1536_pp0_iter3_reg);

assign or_cond_fu_974_p2 = (sel_tmp34_i_fu_968_p2 | sel_tmp23_i_fu_950_p2);

assign p_Val2_14_fu_356_p3 = {{buffer_M_imag_V_q0}, {15'd0}};

assign p_Val2_15_fu_322_p1 = data_in_V_data_0_data_out[15:0];

assign p_Val2_26_fu_686_p3 = {{tmp_6_fu_676_p4}, {2'd0}};

assign p_Val2_28_fu_664_p3 = {{tmp_5_fu_654_p4}, {2'd0}};

assign p_Val2_2_fu_327_p4 = {{data_in_V_data_0_data_out[31:16]}};

assign p_Val2_30_fu_706_p2 = ($signed(AutoCorr_M_real_V) + $signed(p_y_M_real_V_read_a_1_fu_672_p1));

assign p_Val2_31_fu_728_p3 = {{tmp_7_fu_718_p4}, {2'd0}};

assign p_Val2_32_fu_750_p3 = {{tmp_8_fu_740_p4}, {2'd0}};

assign p_Val2_33_fu_712_p2 = ($signed(AutoCorr_M_imag_V) + $signed(p_y_M_imag_V_read_a_2_fu_694_p1));

assign p_Val2_34_fu_768_p2 = ($signed(p_Val2_33_fu_712_p2) - $signed(p_y_M_imag_V_read_a_3_fu_758_p1));

assign p_Val2_36_fu_503_p3 = {{ToAddE_V_reg_1426}, {2'd0}};

assign p_Val2_38_fu_514_p3 = {{ToSubE_V_reg_1346}, {2'd0}};

assign p_Val2_3_fu_556_p3 = {{ToAddE_prev_V_reg_1437}, {2'd0}};

assign p_Val2_42_fu_544_p2 = ($signed(Energy_V) + $signed(tmp_20_i_cast_fu_541_p1));

assign p_Val2_45_i_cast_fu_510_p1 = $signed(p_Val2_36_fu_503_p3);

assign p_Val2_46_fu_762_p2 = ($signed(p_Val2_30_fu_706_p2) - $signed(p_y_M_real_V_read_a_2_fu_736_p1));

assign p_Val2_47_i_cast_fu_521_p1 = $signed(p_Val2_38_fu_514_p3);

assign p_Val2_4_fu_571_p3 = {{ToSubE_prev_V_reg_1351}, {2'd0}};

assign p_Val2_50_i_cast_fu_563_p1 = $signed(p_Val2_3_fu_556_p3);

assign p_Val2_52_i_cast_fu_578_p1 = $signed(p_Val2_4_fu_571_p3);

assign p_Val2_5_fu_338_p1 = prev_buffer_M_imag_s_q0;

assign p_Val2_5_fu_338_p3 = {{p_Val2_5_fu_338_p1}, {15'd0}};

assign p_r_M_imag_V_1_fu_350_p2 = ($signed(32'd0) - $signed(p_z_M_imag_V_read_a_fu_346_p1));

assign p_r_M_imag_V_2_fu_368_p2 = ($signed(32'd0) - $signed(p_y_M_imag_V_read_a_fu_364_p1));

assign p_r_M_real_V_1_fu_378_p3 = {{p_Val2_s_reg_1313}, {15'd0}};

assign p_r_M_real_V_2_fu_388_p3 = {{p_Val2_6_reg_1329}, {15'd0}};

assign p_y_M_imag_V_read_a_1_fu_450_p3 = {{p_Val2_2_reg_1307}, {15'd0}};

assign p_y_M_imag_V_read_a_2_fu_694_p1 = $signed(p_Val2_26_fu_686_p3);

assign p_y_M_imag_V_read_a_3_fu_758_p1 = $signed(p_Val2_32_fu_750_p3);

assign p_y_M_imag_V_read_a_fu_364_p1 = p_Val2_14_fu_356_p3;

assign p_y_M_real_V_read_a_1_fu_672_p1 = $signed(p_Val2_28_fu_664_p3);

assign p_y_M_real_V_read_a_2_fu_736_p1 = $signed(p_Val2_31_fu_728_p3);

assign p_y_M_real_V_read_a_fu_443_p3 = {{p_Val2_15_reg_1300}, {15'd0}};

assign p_z_M_imag_V_read_a_fu_346_p1 = $signed(p_Val2_5_fu_338_p3);

assign r_V_10_2_i_fu_869_p3 = {{tmp_25_i_reg_1494_pp0_iter1_reg}, {33'd0}};

assign r_V_10_i_cast_fu_471_p1 = $signed(p_r_M_imag_V_2_reg_1356);

assign r_V_15_fu_385_p1 = p_Val2_1_reg_1319;

assign r_V_26_fu_1235_p0 = r_V_7_fu_374_p1;

assign r_V_26_fu_1235_p1 = r_V_7_fu_374_p1;

assign r_V_28_fu_1248_p0 = r_V_15_fu_385_p1;

assign r_V_28_fu_1248_p1 = r_V_15_fu_385_p1;

assign r_V_2_i_cast_fu_395_p1 = $signed(p_r_M_real_V_1_fu_378_p3);

assign r_V_4_i_cast_fu_413_p1 = $signed(p_r_M_imag_V_1_reg_1324);

assign r_V_7_fu_374_p1 = p_Val2_2_fu_327_p4;

assign r_V_8_i_cast_fu_403_p1 = p_r_M_real_V_2_fu_388_p3;

assign r_V_9_fu_500_p1 = p_Val2_s_reg_1313;

assign r_V_fu_440_p1 = p_Val2_15_reg_1300;

assign ret_V_1_fu_633_p2 = ($signed(r_V_19_reg_1458) + $signed(tmp_2_i_i_i_cast_fu_630_p1));

assign ret_V_2_fu_641_p2 = ($signed(r_V_21_reg_1468) - $signed(tmp_8_i_i1_i_cast_fu_638_p1));

assign ret_V_3_fu_649_p2 = ($signed(r_V_23_reg_1478) + $signed(tmp_2_i_i1_i_cast_fu_646_p1));

assign ret_V_fu_625_p2 = ($signed(r_V_17_reg_1448) - $signed(tmp_8_i_i_i_cast_fu_622_p1));

assign rev7_fu_1202_p2 = (slt_reg_1501_pp0_iter3_reg ^ 1'd1);

assign sel_tmp13_demorgan_i_fu_920_p2 = (tmp_10_2_i_fu_876_p2 | sel_tmp6_demorgan_i_fu_914_p2);

assign sel_tmp13_i_fu_926_p2 = (sel_tmp13_demorgan_i_fu_920_p2 ^ 1'd1);

assign sel_tmp14_i_fu_932_p2 = (tmp_10_3_i_fu_882_p2 & sel_tmp13_i_fu_926_p2);

assign sel_tmp1_i_fu_902_p2 = (tmp_9_i_fu_859_p2 ^ 1'd1);

assign sel_tmp22_demorgan_i_fu_938_p2 = (tmp_10_3_i_fu_882_p2 | sel_tmp13_demorgan_i_fu_920_p2);

assign sel_tmp22_i_fu_944_p2 = (sel_tmp22_demorgan_i_fu_938_p2 ^ 1'd1);

assign sel_tmp23_i_fu_950_p2 = (tmp_10_4_i_fu_887_p2 & sel_tmp22_i_fu_944_p2);

assign sel_tmp2_i_fu_908_p2 = (tmp_10_1_i_fu_864_p2 & sel_tmp1_i_fu_902_p2);

assign sel_tmp33_demorgan_i_fu_956_p2 = (tmp_10_4_i_fu_887_p2 | sel_tmp22_demorgan_i_fu_938_p2);

assign sel_tmp33_i_fu_962_p2 = (sel_tmp33_demorgan_i_fu_956_p2 ^ 1'd1);

assign sel_tmp34_i_fu_968_p2 = (tmp_10_5_i_fu_892_p2 & sel_tmp33_i_fu_962_p2);

assign sel_tmp5_fu_1153_p2 = (tmp_3_reg_1536_pp0_iter2_reg ^ 1'd1);

assign sel_tmp6_demorgan_i_fu_914_p2 = (tmp_9_i_fu_859_p2 | tmp_10_1_i_fu_864_p2);

assign sel_tmp6_fu_1158_p2 = (tmp_4_reg_1542_pp0_iter2_reg & sel_tmp5_fu_1153_p2);

assign sel_tmp6_i_fu_1006_p2 = (sel_tmp6_demorgan_i_reg_1583 ^ 1'd1);

assign sel_tmp7_i_fu_1011_p2 = (tmp_10_2_i_reg_1578 & sel_tmp6_i_fu_1006_p2);

assign sel_tmp9_fu_1213_p2 = (tmp_fu_1207_p2 & not_i_reg_1650_pp0_iter3_reg);

assign slt_fu_616_p2 = (($signed(p_Val2_42_fu_544_p2) < $signed(tmp_9_cast_fu_612_p1)) ? 1'b1 : 1'b0);

assign state_V_load_load_fu_284_p1 = state_V;

assign sum_i_fu_1123_p2 = (p_Val2_34_reg_1514_pp0_iter2_reg + p_Val2_46_reg_1506_pp0_iter2_reg);

assign thresh_vec_address0 = tmp_3_i_fu_1101_p1;

assign tmp_10_1_i_fu_864_p2 = (($signed(tmp_7_i_cast_fu_855_p1) > $signed(r_V_10_1_i_reg_1553)) ? 1'b1 : 1'b0);

assign tmp_10_2_i_fu_876_p2 = (($signed(tmp_7_i_cast1_fu_851_p1) > $signed(r_V_10_2_i_fu_869_p3)) ? 1'b1 : 1'b0);

assign tmp_10_3_i_fu_882_p2 = (($signed(tmp_7_i_cast1_fu_851_p1) > $signed(r_V_10_3_i_reg_1558)) ? 1'b1 : 1'b0);

assign tmp_10_4_i_fu_887_p2 = (($signed(tmp_7_i_cast1_fu_851_p1) > $signed(r_V_10_4_i_reg_1563)) ? 1'b1 : 1'b0);

assign tmp_10_5_i_fu_892_p2 = (($signed(tmp_7_i_cast1_fu_851_p1) > $signed(r_V_10_5_i_reg_1568)) ? 1'b1 : 1'b0);

assign tmp_10_6_i_fu_897_p2 = (($signed(tmp_7_i_cast1_fu_851_p1) > $signed(r_V_10_6_i_reg_1573)) ? 1'b1 : 1'b0);

assign tmp_10_fu_1183_p3 = ((or_cond4_fu_1179_p2[0:0] === 1'b1) ? tmp_s_reg_1660 : tmp_2_reg_1665);

assign tmp_12_i_fu_1127_p2 = (44'd0 - sum_i_fu_1123_p2);

assign tmp_13_fu_1145_p3 = tmp_1_fu_1141_p2[32'd43];

assign tmp_13_i1_fu_302_p2 = (11'd1 + idxnw_V);

assign tmp_13_i_fu_1133_p2 = (p_Val2_34_reg_1514_pp0_iter2_reg - p_Val2_46_reg_1506_pp0_iter2_reg);

assign tmp_14_i_fu_1137_p2 = (p_Val2_46_reg_1506_pp0_iter2_reg - p_Val2_34_reg_1514_pp0_iter2_reg);

assign tmp_18_i_fu_1189_p3 = {{tmp_10_fu_1183_p3}, {32'd0}};

assign tmp_1_fu_1141_p2 = (p_Val2_46_reg_1506_pp0_iter2_reg & p_Val2_34_reg_1514_pp0_iter2_reg);

assign tmp_1_i_fu_1063_p1 = idxnw_lev_V;

assign tmp_20_i_cast_fu_541_p1 = $signed(tmp_20_i_reg_1443);

assign tmp_20_i_fu_525_p2 = ($signed(p_Val2_45_i_cast_fu_510_p1) - $signed(p_Val2_47_i_cast_fu_521_p1));

assign tmp_24_i_cast_fu_588_p1 = $signed(tmp_24_i_fu_582_p2);

assign tmp_24_i_fu_582_p2 = ($signed(p_Val2_50_i_cast_fu_563_p1) - $signed(p_Val2_52_i_cast_fu_578_p1));

assign tmp_25_i_fu_592_p2 = ($signed(Energy_prev_V) + $signed(tmp_24_i_cast_fu_588_p1));

assign tmp_28_not_not_i_fu_1197_p2 = (($signed(tmp_18_i_fu_1189_p3) > $signed(r_V_1_reg_1655)) ? 1'b1 : 1'b0);

assign tmp_2_fu_1171_p3 = ((tmp_13_fu_1145_p3[0:0] === 1'b1) ? tmp_12_i_fu_1127_p2 : sum_i_fu_1123_p2);

assign tmp_2_i_fu_1084_p1 = idxnw_lev_use_V;

assign tmp_2_i_i1_i_cast_fu_646_p1 = $signed(r_V_24_reg_1483);

assign tmp_2_i_i_i_cast_fu_630_p1 = $signed(r_V_20_reg_1463);

assign tmp_3_i_fu_1101_p1 = level_buf_V_q0;

assign tmp_4_i_fu_1068_p2 = (10'd1 + idxnw_lev_V);

assign tmp_5_fu_654_p4 = {{ret_V_2_fu_641_p2[61:30]}};

assign tmp_6_fu_676_p4 = {{ret_V_3_fu_649_p2[61:30]}};

assign tmp_6_i_fu_844_p3 = {{p_Val2_42_reg_1488_pp0_iter1_reg}, {32'd0}};

assign tmp_7_fu_718_p4 = {{ret_V_fu_625_p2[61:30]}};

assign tmp_7_i_cast1_fu_851_p1 = tmp_6_i_fu_844_p3;

assign tmp_7_i_cast_fu_855_p1 = tmp_6_i_fu_844_p3;

assign tmp_8_fu_740_p4 = {{ret_V_1_fu_633_p2[61:30]}};

assign tmp_8_i_fu_1089_p2 = (10'd1 + idxnw_lev_use_V);

assign tmp_8_i_i1_i_cast_fu_638_p1 = $signed(r_V_22_reg_1473);

assign tmp_8_i_i_i_cast_fu_622_p1 = $signed(r_V_18_reg_1453);

assign tmp_9_cast_fu_612_p1 = $signed(tmp_9_fu_604_p3);

assign tmp_9_fu_604_p3 = {{power_threshold_in_V}, {2'd0}};

assign tmp_9_i_fu_859_p2 = (($signed(tmp_7_i_cast_fu_855_p1) > $signed(r_V_i_reg_1548)) ? 1'b1 : 1'b0);

assign tmp_data_1_fu_1226_p3 = {{16'd0}, {tmp_data_M_real_V_c_fu_1218_p3}};

assign tmp_data_M_real_V_c_fu_1218_p3 = ((sel_tmp9_fu_1213_p2[0:0] === 1'b1) ? 16'd16384 : 16'd0);

assign tmp_fu_1207_p2 = (tmp_28_not_not_i_fu_1197_p2 & rev7_fu_1202_p2);

assign tmp_i19_cast1_fu_786_p1 = tmp_25_i_reg_1494;

assign tmp_i19_cast_fu_789_p1 = tmp_25_i_reg_1494;

assign tmp_i1_fu_292_p1 = idxnw_V;

assign tmp_s_fu_1163_p3 = ((sel_tmp6_fu_1158_p2[0:0] === 1'b1) ? tmp_14_i_fu_1137_p2 : tmp_13_i_fu_1133_p2);

always @ (posedge ap_clk) begin
    p_r_M_imag_V_1_reg_1324[14:0] <= 15'b000000000000000;
    p_Val2_14_reg_1340[14:0] <= 15'b000000000000000;
    p_r_M_imag_V_2_reg_1356[14:0] <= 15'b000000000000000;
    tmp_20_i_reg_1443[1:0] <= 2'b00;
end

endmodule //packet_det
